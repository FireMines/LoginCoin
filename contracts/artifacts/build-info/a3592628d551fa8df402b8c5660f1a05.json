{
	"id": "a3592628d551fa8df402b8c5660f1a05",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CoinPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\ncontract CoinPool is OwnableUpgradeable {\n    IERC20Upgradeable public loginCoin;\n\n    function initialize(address _loginCoinAddress, address _owner) public initializer {\n        __Ownable_init(_owner);\n        loginCoin = IERC20Upgradeable(_loginCoinAddress);\n    }\n\n    function distributeCoins(address recipient, uint256 amount) public onlyOwner {\n        require(loginCoin.balanceOf(address(this)) >= amount, \"Insufficient coins in the pool\");\n        loginCoin.transfer(recipient, amount);\n    }\n\n    function collectCoins(address sender, uint256 amount) public onlyOwner {\n        require(loginCoin.allowance(sender, address(this)) >= amount, \"Insufficient allowance\");\n        loginCoin.transferFrom(sender, address(this), amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CoinPool.sol": {
				"CoinPool": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "collectCoins",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeCoins",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_loginCoinAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loginCoin",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinPool.sol\":215:961  contract CoinPool is OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinPool.sol\":215:961  contract CoinPool is OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9e5383e1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xca634519\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x485cc955\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5eaf4014\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinPool.sol\":302:481  function initialize(address _loginCoinAddress, address _owner) public initializer {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/CoinPool.sol\":261:295  IERC20Upgradeable public loginCoin */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinPool.sol\":721:959  function collectCoins(address sender, uint256 amount) public onlyOwner {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/CoinPool.sol\":487:715  function distributeCoins(address recipient, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/CoinPool.sol\":302:481  function initialize(address _loginCoinAddress, address _owner) public initializer {... */\n    tag_14:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_37\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_38\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_40\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_41\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_43:\n        /* \"contracts/CoinPool.sol\":394:416  __Ownable_init(_owner) */\n      tag_45\n        /* \"contracts/CoinPool.sol\":409:415  _owner */\n      dup7\n        /* \"contracts/CoinPool.sol\":394:408  __Ownable_init */\n      tag_46\n        /* \"contracts/CoinPool.sol\":394:416  __Ownable_init(_owner) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/CoinPool.sol\":456:473  _loginCoinAddress */\n      dup7\n        /* \"contracts/CoinPool.sol\":426:435  loginCoin */\n      0x00\n      dup1\n        /* \"contracts/CoinPool.sol\":426:474  loginCoin = IERC20Upgradeable(_loginCoinAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CoinPool.sol\":302:481  function initialize(address _loginCoinAddress, address _owner) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CoinPool.sol\":261:295  IERC20Upgradeable public loginCoin */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_54\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_58\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CoinPool.sol\":721:959  function collectCoins(address sender, uint256 amount) public onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"contracts/CoinPool.sol\":856:862  amount */\n      dup1\n        /* \"contracts/CoinPool.sol\":810:819  loginCoin */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CoinPool.sol\":810:829  loginCoin.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/CoinPool.sol\":830:836  sender */\n      dup5\n        /* \"contracts/CoinPool.sol\":846:850  this */\n      address\n        /* \"contracts/CoinPool.sol\":810:852  loginCoin.allowance(sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/CoinPool.sol\":810:862  loginCoin.allowance(sender, address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/CoinPool.sol\":802:889  require(loginCoin.allowance(sender, address(this)) >= amount, \"Insufficient allowance\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/CoinPool.sol\":899:908  loginCoin */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CoinPool.sol\":899:921  loginCoin.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/CoinPool.sol\":922:928  sender */\n      dup4\n        /* \"contracts/CoinPool.sol\":938:942  this */\n      address\n        /* \"contracts/CoinPool.sol\":945:951  amount */\n      dup5\n        /* \"contracts/CoinPool.sol\":899:952  loginCoin.transferFrom(sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      pop\n        /* \"contracts/CoinPool.sol\":721:959  function collectCoins(address sender, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CoinPool.sol\":487:715  function distributeCoins(address recipient, uint256 amount) public onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/CoinPool.sol\":620:626  amount */\n      dup1\n        /* \"contracts/CoinPool.sol\":582:591  loginCoin */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CoinPool.sol\":582:601  loginCoin.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/CoinPool.sol\":610:614  this */\n      address\n        /* \"contracts/CoinPool.sol\":582:616  loginCoin.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_80:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_83:\n        /* \"contracts/CoinPool.sol\":582:626  loginCoin.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/CoinPool.sol\":574:661  require(loginCoin.balanceOf(address(this)) >= amount, \"Insufficient coins in the pool\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/CoinPool.sol\":671:680  loginCoin */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CoinPool.sol\":671:689  loginCoin.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/CoinPool.sol\":690:699  recipient */\n      dup4\n        /* \"contracts/CoinPool.sol\":701:707  amount */\n      dup4\n        /* \"contracts/CoinPool.sol\":671:708  loginCoin.transfer(recipient, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_91:\n      pop\n        /* \"contracts/CoinPool.sol\":487:715  function distributeCoins(address recipient, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_22\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_113\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_58\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_116\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_38\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_129:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_131:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_132:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_164\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_131\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_133:\n        /* \"#utility.yul\":641:665   */\n      tag_166\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_132\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_167:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_134:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_169\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_133\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1315   */\n    tag_13:\n        /* \"#utility.yul\":909:915   */\n      0x00\n        /* \"#utility.yul\":917:923   */\n      dup1\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":945:952   */\n      dup6\n        /* \"#utility.yul\":941:964   */\n      sub\n        /* \"#utility.yul\":937:969   */\n      slt\n        /* \"#utility.yul\":934:1053   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":972:1051   */\n      tag_172\n      tag_129\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":934:1053   */\n    tag_171:\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1117:1170   */\n      tag_173\n        /* \"#utility.yul\":1162:1169   */\n      dup6\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1142:1151   */\n      dup7\n        /* \"#utility.yul\":1138:1160   */\n      add\n        /* \"#utility.yul\":1117:1170   */\n      tag_134\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1107:1170   */\n      swap3\n      pop\n        /* \"#utility.yul\":1063:1180   */\n      pop\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1245:1298   */\n      tag_174\n        /* \"#utility.yul\":1290:1297   */\n      dup6\n        /* \"#utility.yul\":1281:1287   */\n      dup3\n        /* \"#utility.yul\":1270:1279   */\n      dup7\n        /* \"#utility.yul\":1266:1288   */\n      add\n        /* \"#utility.yul\":1245:1298   */\n      tag_134\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1235:1298   */\n      swap2\n      pop\n        /* \"#utility.yul\":1190:1308   */\n      pop\n        /* \"#utility.yul\":841:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1381   */\n    tag_135:\n        /* \"#utility.yul\":1349:1352   */\n      0x00\n        /* \"#utility.yul\":1370:1375   */\n      dup2\n        /* \"#utility.yul\":1363:1375   */\n      swap1\n      pop\n        /* \"#utility.yul\":1321:1381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1529   */\n    tag_136:\n        /* \"#utility.yul\":1437:1446   */\n      0x00\n        /* \"#utility.yul\":1470:1523   */\n      tag_177\n        /* \"#utility.yul\":1488:1522   */\n      tag_178\n        /* \"#utility.yul\":1497:1521   */\n      tag_179\n        /* \"#utility.yul\":1515:1520   */\n      dup5\n        /* \"#utility.yul\":1497:1521   */\n      tag_131\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1488:1522   */\n      tag_135\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1470:1523   */\n      tag_131\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1457:1523   */\n      swap1\n      pop\n        /* \"#utility.yul\":1387:1529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1535:1661   */\n    tag_137:\n        /* \"#utility.yul\":1585:1594   */\n      0x00\n        /* \"#utility.yul\":1618:1655   */\n      tag_181\n        /* \"#utility.yul\":1649:1654   */\n      dup3\n        /* \"#utility.yul\":1618:1655   */\n      tag_136\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1605:1655   */\n      swap1\n      pop\n        /* \"#utility.yul\":1535:1661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1818   */\n    tag_138:\n        /* \"#utility.yul\":1742:1751   */\n      0x00\n        /* \"#utility.yul\":1775:1812   */\n      tag_183\n        /* \"#utility.yul\":1806:1811   */\n      dup3\n        /* \"#utility.yul\":1775:1812   */\n      tag_137\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1762:1812   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2005   */\n    tag_139:\n        /* \"#utility.yul\":1936:1998   */\n      tag_185\n        /* \"#utility.yul\":1992:1997   */\n      dup2\n        /* \"#utility.yul\":1936:1998   */\n      tag_138\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1931:1934   */\n      dup3\n        /* \"#utility.yul\":1924:1999   */\n      mstore\n        /* \"#utility.yul\":1824:2005   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2011:2283   */\n    tag_18:\n        /* \"#utility.yul\":2129:2133   */\n      0x00\n        /* \"#utility.yul\":2167:2169   */\n      0x20\n        /* \"#utility.yul\":2156:2165   */\n      dup3\n        /* \"#utility.yul\":2152:2170   */\n      add\n        /* \"#utility.yul\":2144:2170   */\n      swap1\n      pop\n        /* \"#utility.yul\":2180:2276   */\n      tag_187\n        /* \"#utility.yul\":2273:2274   */\n      0x00\n        /* \"#utility.yul\":2262:2271   */\n      dup4\n        /* \"#utility.yul\":2258:2275   */\n      add\n        /* \"#utility.yul\":2249:2255   */\n      dup5\n        /* \"#utility.yul\":2180:2276   */\n      tag_139\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2011:2283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2289:2407   */\n    tag_140:\n        /* \"#utility.yul\":2376:2400   */\n      tag_189\n        /* \"#utility.yul\":2394:2399   */\n      dup2\n        /* \"#utility.yul\":2376:2400   */\n      tag_132\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2371:2374   */\n      dup3\n        /* \"#utility.yul\":2364:2401   */\n      mstore\n        /* \"#utility.yul\":2289:2407   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2413:2635   */\n    tag_24:\n        /* \"#utility.yul\":2506:2510   */\n      0x00\n        /* \"#utility.yul\":2544:2546   */\n      0x20\n        /* \"#utility.yul\":2533:2542   */\n      dup3\n        /* \"#utility.yul\":2529:2547   */\n      add\n        /* \"#utility.yul\":2521:2547   */\n      swap1\n      pop\n        /* \"#utility.yul\":2557:2628   */\n      tag_191\n        /* \"#utility.yul\":2625:2626   */\n      0x00\n        /* \"#utility.yul\":2614:2623   */\n      dup4\n        /* \"#utility.yul\":2610:2627   */\n      add\n        /* \"#utility.yul\":2601:2607   */\n      dup5\n        /* \"#utility.yul\":2557:2628   */\n      tag_140\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2413:2635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2641:2718   */\n    tag_141:\n        /* \"#utility.yul\":2678:2685   */\n      0x00\n        /* \"#utility.yul\":2707:2712   */\n      dup2\n        /* \"#utility.yul\":2696:2712   */\n      swap1\n      pop\n        /* \"#utility.yul\":2641:2718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2724:2846   */\n    tag_142:\n        /* \"#utility.yul\":2797:2821   */\n      tag_194\n        /* \"#utility.yul\":2815:2820   */\n      dup2\n        /* \"#utility.yul\":2797:2821   */\n      tag_141\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2790:2795   */\n      dup2\n        /* \"#utility.yul\":2787:2822   */\n      eq\n        /* \"#utility.yul\":2777:2840   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2836:2837   */\n      0x00\n        /* \"#utility.yul\":2833:2834   */\n      dup1\n        /* \"#utility.yul\":2826:2838   */\n      revert\n        /* \"#utility.yul\":2777:2840   */\n    tag_195:\n        /* \"#utility.yul\":2724:2846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2852:2991   */\n    tag_143:\n        /* \"#utility.yul\":2898:2903   */\n      0x00\n        /* \"#utility.yul\":2936:2942   */\n      dup2\n        /* \"#utility.yul\":2923:2943   */\n      calldataload\n        /* \"#utility.yul\":2914:2943   */\n      swap1\n      pop\n        /* \"#utility.yul\":2952:2985   */\n      tag_197\n        /* \"#utility.yul\":2979:2984   */\n      dup2\n        /* \"#utility.yul\":2952:2985   */\n      tag_142\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2852:2991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3471   */\n    tag_27:\n        /* \"#utility.yul\":3065:3071   */\n      0x00\n        /* \"#utility.yul\":3073:3079   */\n      dup1\n        /* \"#utility.yul\":3122:3124   */\n      0x40\n        /* \"#utility.yul\":3110:3119   */\n      dup4\n        /* \"#utility.yul\":3101:3108   */\n      dup6\n        /* \"#utility.yul\":3097:3120   */\n      sub\n        /* \"#utility.yul\":3093:3125   */\n      slt\n        /* \"#utility.yul\":3090:3209   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3128:3207   */\n      tag_200\n      tag_129\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3090:3209   */\n    tag_199:\n        /* \"#utility.yul\":3248:3249   */\n      0x00\n        /* \"#utility.yul\":3273:3326   */\n      tag_201\n        /* \"#utility.yul\":3318:3325   */\n      dup6\n        /* \"#utility.yul\":3309:3315   */\n      dup3\n        /* \"#utility.yul\":3298:3307   */\n      dup7\n        /* \"#utility.yul\":3294:3316   */\n      add\n        /* \"#utility.yul\":3273:3326   */\n      tag_134\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3263:3326   */\n      swap3\n      pop\n        /* \"#utility.yul\":3219:3336   */\n      pop\n        /* \"#utility.yul\":3375:3377   */\n      0x20\n        /* \"#utility.yul\":3401:3454   */\n      tag_202\n        /* \"#utility.yul\":3446:3453   */\n      dup6\n        /* \"#utility.yul\":3437:3443   */\n      dup3\n        /* \"#utility.yul\":3426:3435   */\n      dup7\n        /* \"#utility.yul\":3422:3444   */\n      add\n        /* \"#utility.yul\":3401:3454   */\n      tag_143\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3391:3454   */\n      swap2\n      pop\n        /* \"#utility.yul\":3346:3464   */\n      pop\n        /* \"#utility.yul\":2997:3471   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3477:3806   */\n    tag_34:\n        /* \"#utility.yul\":3536:3542   */\n      0x00\n        /* \"#utility.yul\":3585:3587   */\n      0x20\n        /* \"#utility.yul\":3573:3582   */\n      dup3\n        /* \"#utility.yul\":3564:3571   */\n      dup5\n        /* \"#utility.yul\":3560:3583   */\n      sub\n        /* \"#utility.yul\":3556:3588   */\n      slt\n        /* \"#utility.yul\":3553:3672   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":3591:3670   */\n      tag_205\n      tag_129\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3553:3672   */\n    tag_204:\n        /* \"#utility.yul\":3711:3712   */\n      0x00\n        /* \"#utility.yul\":3736:3789   */\n      tag_206\n        /* \"#utility.yul\":3781:3788   */\n      dup5\n        /* \"#utility.yul\":3772:3778   */\n      dup3\n        /* \"#utility.yul\":3761:3770   */\n      dup6\n        /* \"#utility.yul\":3757:3779   */\n      add\n        /* \"#utility.yul\":3736:3789   */\n      tag_134\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3726:3789   */\n      swap2\n      pop\n        /* \"#utility.yul\":3682:3799   */\n      pop\n        /* \"#utility.yul\":3477:3806   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3897   */\n    tag_144:\n        /* \"#utility.yul\":3857:3864   */\n      0x00\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3875:3891   */\n      swap1\n      pop\n        /* \"#utility.yul\":3812:3897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3903:4004   */\n    tag_145:\n        /* \"#utility.yul\":3939:3946   */\n      0x00\n        /* \"#utility.yul\":3979:3997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3972:3977   */\n      dup3\n        /* \"#utility.yul\":3968:3998   */\n      and\n        /* \"#utility.yul\":3957:3998   */\n      swap1\n      pop\n        /* \"#utility.yul\":3903:4004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4010:4166   */\n    tag_146:\n        /* \"#utility.yul\":4067:4076   */\n      0x00\n        /* \"#utility.yul\":4100:4160   */\n      tag_210\n        /* \"#utility.yul\":4117:4159   */\n      tag_211\n        /* \"#utility.yul\":4126:4158   */\n      tag_212\n        /* \"#utility.yul\":4152:4157   */\n      dup5\n        /* \"#utility.yul\":4126:4158   */\n      tag_144\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4117:4159   */\n      tag_135\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4100:4160   */\n      tag_145\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4087:4160   */\n      swap1\n      pop\n        /* \"#utility.yul\":4010:4166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4172:4317   */\n    tag_147:\n        /* \"#utility.yul\":4266:4310   */\n      tag_214\n        /* \"#utility.yul\":4304:4309   */\n      dup2\n        /* \"#utility.yul\":4266:4310   */\n      tag_146\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4261:4264   */\n      dup3\n        /* \"#utility.yul\":4254:4311   */\n      mstore\n        /* \"#utility.yul\":4172:4317   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4323:4559   */\n    tag_49:\n        /* \"#utility.yul\":4423:4427   */\n      0x00\n        /* \"#utility.yul\":4461:4463   */\n      0x20\n        /* \"#utility.yul\":4450:4459   */\n      dup3\n        /* \"#utility.yul\":4446:4464   */\n      add\n        /* \"#utility.yul\":4438:4464   */\n      swap1\n      pop\n        /* \"#utility.yul\":4474:4552   */\n      tag_216\n        /* \"#utility.yul\":4549:4550   */\n      0x00\n        /* \"#utility.yul\":4538:4547   */\n      dup4\n        /* \"#utility.yul\":4534:4551   */\n      add\n        /* \"#utility.yul\":4525:4531   */\n      dup5\n        /* \"#utility.yul\":4474:4552   */\n      tag_147\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4323:4559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4565:4897   */\n    tag_63:\n        /* \"#utility.yul\":4686:4690   */\n      0x00\n        /* \"#utility.yul\":4724:4726   */\n      0x40\n        /* \"#utility.yul\":4713:4722   */\n      dup3\n        /* \"#utility.yul\":4709:4727   */\n      add\n        /* \"#utility.yul\":4701:4727   */\n      swap1\n      pop\n        /* \"#utility.yul\":4737:4808   */\n      tag_218\n        /* \"#utility.yul\":4805:4806   */\n      0x00\n        /* \"#utility.yul\":4794:4803   */\n      dup4\n        /* \"#utility.yul\":4790:4807   */\n      add\n        /* \"#utility.yul\":4781:4787   */\n      dup6\n        /* \"#utility.yul\":4737:4808   */\n      tag_140\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4818:4890   */\n      tag_219\n        /* \"#utility.yul\":4886:4888   */\n      0x20\n        /* \"#utility.yul\":4875:4884   */\n      dup4\n        /* \"#utility.yul\":4871:4889   */\n      add\n        /* \"#utility.yul\":4862:4868   */\n      dup5\n        /* \"#utility.yul\":4818:4890   */\n      tag_140\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4565:4897   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4903:5046   */\n    tag_148:\n        /* \"#utility.yul\":4960:4965   */\n      0x00\n        /* \"#utility.yul\":4991:4997   */\n      dup2\n        /* \"#utility.yul\":4985:4998   */\n      mload\n        /* \"#utility.yul\":4976:4998   */\n      swap1\n      pop\n        /* \"#utility.yul\":5007:5040   */\n      tag_221\n        /* \"#utility.yul\":5034:5039   */\n      dup2\n        /* \"#utility.yul\":5007:5040   */\n      tag_142\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4903:5046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5052:5403   */\n    tag_67:\n        /* \"#utility.yul\":5122:5128   */\n      0x00\n        /* \"#utility.yul\":5171:5173   */\n      0x20\n        /* \"#utility.yul\":5159:5168   */\n      dup3\n        /* \"#utility.yul\":5150:5157   */\n      dup5\n        /* \"#utility.yul\":5146:5169   */\n      sub\n        /* \"#utility.yul\":5142:5174   */\n      slt\n        /* \"#utility.yul\":5139:5258   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":5177:5256   */\n      tag_224\n      tag_129\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5139:5258   */\n    tag_223:\n        /* \"#utility.yul\":5297:5298   */\n      0x00\n        /* \"#utility.yul\":5322:5386   */\n      tag_225\n        /* \"#utility.yul\":5378:5385   */\n      dup5\n        /* \"#utility.yul\":5369:5375   */\n      dup3\n        /* \"#utility.yul\":5358:5367   */\n      dup6\n        /* \"#utility.yul\":5354:5376   */\n      add\n        /* \"#utility.yul\":5322:5386   */\n      tag_148\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5312:5386   */\n      swap2\n      pop\n        /* \"#utility.yul\":5268:5396   */\n      pop\n        /* \"#utility.yul\":5052:5403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5409:5578   */\n    tag_149:\n        /* \"#utility.yul\":5493:5504   */\n      0x00\n        /* \"#utility.yul\":5527:5533   */\n      dup3\n        /* \"#utility.yul\":5522:5525   */\n      dup3\n        /* \"#utility.yul\":5515:5534   */\n      mstore\n        /* \"#utility.yul\":5567:5571   */\n      0x20\n        /* \"#utility.yul\":5562:5565   */\n      dup3\n        /* \"#utility.yul\":5558:5572   */\n      add\n        /* \"#utility.yul\":5543:5572   */\n      swap1\n      pop\n        /* \"#utility.yul\":5409:5578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5584:5756   */\n    tag_150:\n        /* \"#utility.yul\":5724:5748   */\n      0x496e73756666696369656e7420616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":5720:5721   */\n      0x00\n        /* \"#utility.yul\":5712:5718   */\n      dup3\n        /* \"#utility.yul\":5708:5722   */\n      add\n        /* \"#utility.yul\":5701:5749   */\n      mstore\n        /* \"#utility.yul\":5584:5756   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:6128   */\n    tag_151:\n        /* \"#utility.yul\":5904:5907   */\n      0x00\n        /* \"#utility.yul\":5925:5992   */\n      tag_229\n        /* \"#utility.yul\":5989:5991   */\n      0x16\n        /* \"#utility.yul\":5984:5987   */\n      dup4\n        /* \"#utility.yul\":5925:5992   */\n      tag_149\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5918:5992   */\n      swap2\n      pop\n        /* \"#utility.yul\":6001:6094   */\n      tag_230\n        /* \"#utility.yul\":6090:6093   */\n      dup3\n        /* \"#utility.yul\":6001:6094   */\n      tag_150\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6119:6121   */\n      0x20\n        /* \"#utility.yul\":6114:6117   */\n      dup3\n        /* \"#utility.yul\":6110:6122   */\n      add\n        /* \"#utility.yul\":6103:6122   */\n      swap1\n      pop\n        /* \"#utility.yul\":5762:6128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6134:6553   */\n    tag_70:\n        /* \"#utility.yul\":6300:6304   */\n      0x00\n        /* \"#utility.yul\":6338:6340   */\n      0x20\n        /* \"#utility.yul\":6327:6336   */\n      dup3\n        /* \"#utility.yul\":6323:6341   */\n      add\n        /* \"#utility.yul\":6315:6341   */\n      swap1\n      pop\n        /* \"#utility.yul\":6387:6396   */\n      dup2\n        /* \"#utility.yul\":6381:6385   */\n      dup2\n        /* \"#utility.yul\":6377:6397   */\n      sub\n        /* \"#utility.yul\":6373:6374   */\n      0x00\n        /* \"#utility.yul\":6362:6371   */\n      dup4\n        /* \"#utility.yul\":6358:6375   */\n      add\n        /* \"#utility.yul\":6351:6398   */\n      mstore\n        /* \"#utility.yul\":6415:6546   */\n      tag_232\n        /* \"#utility.yul\":6541:6545   */\n      dup2\n        /* \"#utility.yul\":6415:6546   */\n      tag_151\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6407:6546   */\n      swap1\n      pop\n        /* \"#utility.yul\":6134:6553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6559:6677   */\n    tag_152:\n        /* \"#utility.yul\":6646:6670   */\n      tag_234\n        /* \"#utility.yul\":6664:6669   */\n      dup2\n        /* \"#utility.yul\":6646:6670   */\n      tag_141\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6641:6644   */\n      dup3\n        /* \"#utility.yul\":6634:6671   */\n      mstore\n        /* \"#utility.yul\":6559:6677   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6683:7125   */\n    tag_72:\n        /* \"#utility.yul\":6832:6836   */\n      0x00\n        /* \"#utility.yul\":6870:6872   */\n      0x60\n        /* \"#utility.yul\":6859:6868   */\n      dup3\n        /* \"#utility.yul\":6855:6873   */\n      add\n        /* \"#utility.yul\":6847:6873   */\n      swap1\n      pop\n        /* \"#utility.yul\":6883:6954   */\n      tag_236\n        /* \"#utility.yul\":6951:6952   */\n      0x00\n        /* \"#utility.yul\":6940:6949   */\n      dup4\n        /* \"#utility.yul\":6936:6953   */\n      add\n        /* \"#utility.yul\":6927:6933   */\n      dup7\n        /* \"#utility.yul\":6883:6954   */\n      tag_140\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6964:7036   */\n      tag_237\n        /* \"#utility.yul\":7032:7034   */\n      0x20\n        /* \"#utility.yul\":7021:7030   */\n      dup4\n        /* \"#utility.yul\":7017:7035   */\n      add\n        /* \"#utility.yul\":7008:7014   */\n      dup6\n        /* \"#utility.yul\":6964:7036   */\n      tag_140\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7046:7118   */\n      tag_238\n        /* \"#utility.yul\":7114:7116   */\n      0x40\n        /* \"#utility.yul\":7103:7112   */\n      dup4\n        /* \"#utility.yul\":7099:7117   */\n      add\n        /* \"#utility.yul\":7090:7096   */\n      dup5\n        /* \"#utility.yul\":7046:7118   */\n      tag_152\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6683:7125   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7131:7221   */\n    tag_153:\n        /* \"#utility.yul\":7165:7172   */\n      0x00\n        /* \"#utility.yul\":7208:7213   */\n      dup2\n        /* \"#utility.yul\":7201:7214   */\n      iszero\n        /* \"#utility.yul\":7194:7215   */\n      iszero\n        /* \"#utility.yul\":7183:7215   */\n      swap1\n      pop\n        /* \"#utility.yul\":7131:7221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7227:7343   */\n    tag_154:\n        /* \"#utility.yul\":7297:7318   */\n      tag_241\n        /* \"#utility.yul\":7312:7317   */\n      dup2\n        /* \"#utility.yul\":7297:7318   */\n      tag_153\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7290:7295   */\n      dup2\n        /* \"#utility.yul\":7287:7319   */\n      eq\n        /* \"#utility.yul\":7277:7337   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":7333:7334   */\n      0x00\n        /* \"#utility.yul\":7330:7331   */\n      dup1\n        /* \"#utility.yul\":7323:7335   */\n      revert\n        /* \"#utility.yul\":7277:7337   */\n    tag_242:\n        /* \"#utility.yul\":7227:7343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7349:7486   */\n    tag_155:\n        /* \"#utility.yul\":7403:7408   */\n      0x00\n        /* \"#utility.yul\":7434:7440   */\n      dup2\n        /* \"#utility.yul\":7428:7441   */\n      mload\n        /* \"#utility.yul\":7419:7441   */\n      swap1\n      pop\n        /* \"#utility.yul\":7450:7480   */\n      tag_244\n        /* \"#utility.yul\":7474:7479   */\n      dup2\n        /* \"#utility.yul\":7450:7480   */\n      tag_154\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7349:7486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7492:7837   */\n    tag_76:\n        /* \"#utility.yul\":7559:7565   */\n      0x00\n        /* \"#utility.yul\":7608:7610   */\n      0x20\n        /* \"#utility.yul\":7596:7605   */\n      dup3\n        /* \"#utility.yul\":7587:7594   */\n      dup5\n        /* \"#utility.yul\":7583:7606   */\n      sub\n        /* \"#utility.yul\":7579:7611   */\n      slt\n        /* \"#utility.yul\":7576:7695   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":7614:7693   */\n      tag_247\n      tag_129\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7576:7695   */\n    tag_246:\n        /* \"#utility.yul\":7734:7735   */\n      0x00\n        /* \"#utility.yul\":7759:7820   */\n      tag_248\n        /* \"#utility.yul\":7812:7819   */\n      dup5\n        /* \"#utility.yul\":7803:7809   */\n      dup3\n        /* \"#utility.yul\":7792:7801   */\n      dup6\n        /* \"#utility.yul\":7788:7810   */\n      add\n        /* \"#utility.yul\":7759:7820   */\n      tag_155\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7749:7820   */\n      swap2\n      pop\n        /* \"#utility.yul\":7705:7830   */\n      pop\n        /* \"#utility.yul\":7492:7837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7843:8023   */\n    tag_156:\n        /* \"#utility.yul\":7983:8015   */\n      0x496e73756666696369656e7420636f696e7320696e2074686520706f6f6c0000\n        /* \"#utility.yul\":7979:7980   */\n      0x00\n        /* \"#utility.yul\":7971:7977   */\n      dup3\n        /* \"#utility.yul\":7967:7981   */\n      add\n        /* \"#utility.yul\":7960:8016   */\n      mstore\n        /* \"#utility.yul\":7843:8023   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8029:8395   */\n    tag_157:\n        /* \"#utility.yul\":8171:8174   */\n      0x00\n        /* \"#utility.yul\":8192:8259   */\n      tag_251\n        /* \"#utility.yul\":8256:8258   */\n      0x1e\n        /* \"#utility.yul\":8251:8254   */\n      dup4\n        /* \"#utility.yul\":8192:8259   */\n      tag_149\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8185:8259   */\n      swap2\n      pop\n        /* \"#utility.yul\":8268:8361   */\n      tag_252\n        /* \"#utility.yul\":8357:8360   */\n      dup3\n        /* \"#utility.yul\":8268:8361   */\n      tag_156\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":8386:8388   */\n      0x20\n        /* \"#utility.yul\":8381:8384   */\n      dup3\n        /* \"#utility.yul\":8377:8389   */\n      add\n        /* \"#utility.yul\":8370:8389   */\n      swap1\n      pop\n        /* \"#utility.yul\":8029:8395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8401:8820   */\n    tag_86:\n        /* \"#utility.yul\":8567:8571   */\n      0x00\n        /* \"#utility.yul\":8605:8607   */\n      0x20\n        /* \"#utility.yul\":8594:8603   */\n      dup3\n        /* \"#utility.yul\":8590:8608   */\n      add\n        /* \"#utility.yul\":8582:8608   */\n      swap1\n      pop\n        /* \"#utility.yul\":8654:8663   */\n      dup2\n        /* \"#utility.yul\":8648:8652   */\n      dup2\n        /* \"#utility.yul\":8644:8664   */\n      sub\n        /* \"#utility.yul\":8640:8641   */\n      0x00\n        /* \"#utility.yul\":8629:8638   */\n      dup4\n        /* \"#utility.yul\":8625:8642   */\n      add\n        /* \"#utility.yul\":8618:8665   */\n      mstore\n        /* \"#utility.yul\":8682:8813   */\n      tag_254\n        /* \"#utility.yul\":8808:8812   */\n      dup2\n        /* \"#utility.yul\":8682:8813   */\n      tag_157\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8674:8813   */\n      swap1\n      pop\n        /* \"#utility.yul\":8401:8820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8826:9158   */\n    tag_88:\n        /* \"#utility.yul\":8947:8951   */\n      0x00\n        /* \"#utility.yul\":8985:8987   */\n      0x40\n        /* \"#utility.yul\":8974:8983   */\n      dup3\n        /* \"#utility.yul\":8970:8988   */\n      add\n        /* \"#utility.yul\":8962:8988   */\n      swap1\n      pop\n        /* \"#utility.yul\":8998:9069   */\n      tag_256\n        /* \"#utility.yul\":9066:9067   */\n      0x00\n        /* \"#utility.yul\":9055:9064   */\n      dup4\n        /* \"#utility.yul\":9051:9068   */\n      add\n        /* \"#utility.yul\":9042:9048   */\n      dup6\n        /* \"#utility.yul\":8998:9069   */\n      tag_140\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9079:9151   */\n      tag_257\n        /* \"#utility.yul\":9147:9149   */\n      0x20\n        /* \"#utility.yul\":9136:9145   */\n      dup4\n        /* \"#utility.yul\":9132:9150   */\n      add\n        /* \"#utility.yul\":9123:9129   */\n      dup5\n        /* \"#utility.yul\":9079:9151   */\n      tag_152\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8826:9158   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d05e3b2fbc199ae6a37dc84342e8e1b3d84432bbeb3ee1baf306cb654094fa6264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50610e0c8061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c80638da5cb5b116100595780638da5cb5b146100c35780639e5383e1146100e1578063ca634519146100fd578063f2fde38b146101195761007b565b8063485cc9551461007f5780635eaf40141461009b578063715018a6146100b9575b5f80fd5b610099600480360381019061009491906109ea565b610135565b005b6100a36102f6565b6040516100b09190610a83565b60405180910390f35b6100c1610319565b005b6100cb61032c565b6040516100d89190610aab565b60405180910390f35b6100fb60048036038101906100f69190610af7565b610361565b005b61011760048036038101906101129190610af7565b6104e5565b005b610133600480360381019061012e9190610b35565b610665565b005b5f61013e6106e9565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156101865750825b90505f60018367ffffffffffffffff161480156101b957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156101c7575080155b156101fe576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561024b576001855f0160086101000a81548160ff0219169083151502179055505b61025486610710565b865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156102ed575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516102e49190610bac565b60405180910390a15b50505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610321610724565b61032a5f6107ab565b565b5f8061033661087c565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610369610724565b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff1660e01b81526004016103c4929190610bc5565b602060405180830381865afa1580156103df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104039190610c00565b1015610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610c85565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b81526004016104a093929190610cb2565b6020604051808303815f875af11580156104bc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e09190610d1c565b505050565b6104ed610724565b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105469190610aab565b602060405180830381865afa158015610561573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105859190610c00565b10156105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90610d91565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610620929190610daf565b6020604051808303815f875af115801561063c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106609190610d1c565b505050565b61066d610724565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106dd575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106d49190610aab565b60405180910390fd5b6106e6816107ab565b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6107186108a3565b610721816108e3565b50565b61072c610967565b73ffffffffffffffffffffffffffffffffffffffff1661074a61032c565b73ffffffffffffffffffffffffffffffffffffffff16146107a95761076d610967565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107a09190610aab565b60405180910390fd5b565b5f6107b461087c565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6108ab61096e565b6108e1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6108eb6108a3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361095b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109529190610aab565b60405180910390fd5b610964816107ab565b50565b5f33905090565b5f6109776106e9565b5f0160089054906101000a900460ff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109b982610990565b9050919050565b6109c9816109af565b81146109d3575f80fd5b50565b5f813590506109e4816109c0565b92915050565b5f8060408385031215610a00576109ff61098c565b5b5f610a0d858286016109d6565b9250506020610a1e858286016109d6565b9150509250929050565b5f819050919050565b5f610a4b610a46610a4184610990565b610a28565b610990565b9050919050565b5f610a5c82610a31565b9050919050565b5f610a6d82610a52565b9050919050565b610a7d81610a63565b82525050565b5f602082019050610a965f830184610a74565b92915050565b610aa5816109af565b82525050565b5f602082019050610abe5f830184610a9c565b92915050565b5f819050919050565b610ad681610ac4565b8114610ae0575f80fd5b50565b5f81359050610af181610acd565b92915050565b5f8060408385031215610b0d57610b0c61098c565b5b5f610b1a858286016109d6565b9250506020610b2b85828601610ae3565b9150509250929050565b5f60208284031215610b4a57610b4961098c565b5b5f610b57848285016109d6565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f610b96610b91610b8c84610b60565b610a28565b610b69565b9050919050565b610ba681610b7c565b82525050565b5f602082019050610bbf5f830184610b9d565b92915050565b5f604082019050610bd85f830185610a9c565b610be56020830184610a9c565b9392505050565b5f81519050610bfa81610acd565b92915050565b5f60208284031215610c1557610c1461098c565b5b5f610c2284828501610bec565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f610c6f601683610c2b565b9150610c7a82610c3b565b602082019050919050565b5f6020820190508181035f830152610c9c81610c63565b9050919050565b610cac81610ac4565b82525050565b5f606082019050610cc55f830186610a9c565b610cd26020830185610a9c565b610cdf6040830184610ca3565b949350505050565b5f8115159050919050565b610cfb81610ce7565b8114610d05575f80fd5b50565b5f81519050610d1681610cf2565b92915050565b5f60208284031215610d3157610d3061098c565b5b5f610d3e84828501610d08565b91505092915050565b7f496e73756666696369656e7420636f696e7320696e2074686520706f6f6c00005f82015250565b5f610d7b601e83610c2b565b9150610d8682610d47565b602082019050919050565b5f6020820190508181035f830152610da881610d6f565b9050919050565b5f604082019050610dc25f830185610a9c565b610dcf6020830184610ca3565b939250505056fea2646970667358221220d05e3b2fbc199ae6a37dc84342e8e1b3d84432bbeb3ee1baf306cb654094fa6264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0C DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x9E5383E1 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xCA634519 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x119 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5EAF4014 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x319 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x13E PUSH2 0x6E9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x186 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1B9 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1C7 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x24B JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x254 DUP7 PUSH2 0x710 JUMP JUMPDEST DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x724 JUMP JUMPDEST PUSH2 0x32A PUSH0 PUSH2 0x7AB JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x336 PUSH2 0x87C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x369 PUSH2 0x724 JUMP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP3 SWAP2 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST LT ISZERO PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x724 JUMP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST LT ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP3 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x66D PUSH2 0x724 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E6 DUP2 PUSH2 0x7AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x718 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x721 DUP2 PUSH2 0x8E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x72C PUSH2 0x967 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x74A PUSH2 0x32C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A9 JUMPI PUSH2 0x76D PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x7B4 PUSH2 0x87C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0x96E JUMP JUMPDEST PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x8EB PUSH2 0x8A3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x952 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x964 DUP2 PUSH2 0x7AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x977 PUSH2 0x6E9 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B9 DUP3 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C9 DUP2 PUSH2 0x9AF JUMP JUMPDEST DUP2 EQ PUSH2 0x9D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9E4 DUP2 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA00 JUMPI PUSH2 0x9FF PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA0D DUP6 DUP3 DUP7 ADD PUSH2 0x9D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA1E DUP6 DUP3 DUP7 ADD PUSH2 0x9D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA4B PUSH2 0xA46 PUSH2 0xA41 DUP5 PUSH2 0x990 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA5C DUP3 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6D DUP3 PUSH2 0xA52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7D DUP2 PUSH2 0xA63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA96 PUSH0 DUP4 ADD DUP5 PUSH2 0xA74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA5 DUP2 PUSH2 0x9AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xABE PUSH0 DUP4 ADD DUP5 PUSH2 0xA9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD6 DUP2 PUSH2 0xAC4 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF1 DUP2 PUSH2 0xACD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB0D JUMPI PUSH2 0xB0C PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB1A DUP6 DUP3 DUP7 ADD PUSH2 0x9D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB2B DUP6 DUP3 DUP7 ADD PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4A JUMPI PUSH2 0xB49 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB57 DUP5 DUP3 DUP6 ADD PUSH2 0x9D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB96 PUSH2 0xB91 PUSH2 0xB8C DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA6 DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBBF PUSH0 DUP4 ADD DUP5 PUSH2 0xB9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBD8 PUSH0 DUP4 ADD DUP6 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xBE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA9C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBFA DUP2 PUSH2 0xACD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC22 DUP5 DUP3 DUP6 ADD PUSH2 0xBEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC6F PUSH1 0x16 DUP4 PUSH2 0xC2B JUMP JUMPDEST SWAP2 POP PUSH2 0xC7A DUP3 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC9C DUP2 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAC DUP2 PUSH2 0xAC4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCC5 PUSH0 DUP4 ADD DUP7 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xCD2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xCDF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCA3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFB DUP2 PUSH2 0xCE7 JUMP JUMPDEST DUP2 EQ PUSH2 0xD05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD16 DUP2 PUSH2 0xCF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD3E DUP5 DUP3 DUP6 ADD PUSH2 0xD08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F696E7320696E2074686520706F6F6C0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD7B PUSH1 0x1E DUP4 PUSH2 0xC2B JUMP JUMPDEST SWAP2 POP PUSH2 0xD86 DUP3 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDA8 DUP2 PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDC2 PUSH0 DUP4 ADD DUP6 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xDCF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 MCOPY EXTCODESIZE 0x2F 0xBC NOT SWAP11 0xE6 LOG3 PUSH30 0xC84342E8E1B3D84432BBEB3EE1BAF306CB654094FA6264736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "215:746:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 1808,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 2275,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 2211,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 1828,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 1769,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 2172,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 2414,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_554": {
									"entryPoint": 2407,
									"id": 554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 1963,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@collectCoins_666": {
									"entryPoint": 865,
									"id": 666,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distributeCoins_631": {
									"entryPoint": 1253,
									"id": 631,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_601": {
									"entryPoint": 309,
									"id": 601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@loginCoin_581": {
									"entryPoint": 758,
									"id": 581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 812,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 793,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 1637,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20Upgradeable_$526_to_t_address_fromStack": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3250,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Upgradeable_$526__to_t_address__fromStack_reversed": {
									"entryPoint": 2691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 2988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 2921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20Upgradeable_$526_to_t_address": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9161:5",
										"nodeType": "YulBlock",
										"src": "0:9161:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "924:391:5",
													"nodeType": "YulBlock",
													"src": "924:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "970:83:5",
																"nodeType": "YulBlock",
																"src": "970:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "972:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "972:77:5"
																			},
																			"nativeSrc": "972:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "972:79:5"
																		},
																		"nativeSrc": "972:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "972:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "945:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "945:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "954:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "941:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:5"
																		},
																		"nativeSrc": "941:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "941:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "966:2:5",
																		"nodeType": "YulLiteral",
																		"src": "966:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "937:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:5"
																},
																"nativeSrc": "937:32:5",
																"nodeType": "YulFunctionCall",
																"src": "937:32:5"
															},
															"nativeSrc": "934:119:5",
															"nodeType": "YulIf",
															"src": "934:119:5"
														},
														{
															"nativeSrc": "1063:117:5",
															"nodeType": "YulBlock",
															"src": "1063:117:5",
															"statements": [
																{
																	"nativeSrc": "1078:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1078:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1092:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1092:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1082:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1082:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1107:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1107:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1142:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1142:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1153:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1153:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1138:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:5"
																				},
																				"nativeSrc": "1138:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1138:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1162:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1117:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1117:20:5"
																		},
																		"nativeSrc": "1117:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1107:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1107:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1190:118:5",
															"nodeType": "YulBlock",
															"src": "1190:118:5",
															"statements": [
																{
																	"nativeSrc": "1205:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1205:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1219:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1209:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1209:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1235:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1235:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1270:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1270:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1281:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1281:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1266:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1266:3:5"
																				},
																				"nativeSrc": "1266:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1266:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1290:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1290:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1245:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1245:20:5"
																		},
																		"nativeSrc": "1245:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1245:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1235:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1235:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "841:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "886:9:5",
														"nodeType": "YulTypedName",
														"src": "886:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "897:7:5",
														"nodeType": "YulTypedName",
														"src": "897:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "909:6:5",
														"nodeType": "YulTypedName",
														"src": "909:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "917:6:5",
														"nodeType": "YulTypedName",
														"src": "917:6:5",
														"type": ""
													}
												],
												"src": "841:474:5"
											},
											{
												"body": {
													"nativeSrc": "1353:28:5",
													"nodeType": "YulBlock",
													"src": "1353:28:5",
													"statements": [
														{
															"nativeSrc": "1363:12:5",
															"nodeType": "YulAssignment",
															"src": "1363:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "1370:5:5",
																"nodeType": "YulIdentifier",
																"src": "1370:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1363:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1321:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1339:5:5",
														"nodeType": "YulTypedName",
														"src": "1339:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1349:3:5",
														"nodeType": "YulTypedName",
														"src": "1349:3:5",
														"type": ""
													}
												],
												"src": "1321:60:5"
											},
											{
												"body": {
													"nativeSrc": "1447:82:5",
													"nodeType": "YulBlock",
													"src": "1447:82:5",
													"statements": [
														{
															"nativeSrc": "1457:66:5",
															"nodeType": "YulAssignment",
															"src": "1457:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1515:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1515:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1497:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1497:17:5"
																				},
																				"nativeSrc": "1497:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1497:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1488:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "1488:8:5"
																		},
																		"nativeSrc": "1488:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1488:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1470:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1470:17:5"
																},
																"nativeSrc": "1470:53:5",
																"nodeType": "YulFunctionCall",
																"src": "1470:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1457:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1457:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1387:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1427:5:5",
														"nodeType": "YulTypedName",
														"src": "1427:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1437:9:5",
														"nodeType": "YulTypedName",
														"src": "1437:9:5",
														"type": ""
													}
												],
												"src": "1387:142:5"
											},
											{
												"body": {
													"nativeSrc": "1595:66:5",
													"nodeType": "YulBlock",
													"src": "1595:66:5",
													"statements": [
														{
															"nativeSrc": "1605:50:5",
															"nodeType": "YulAssignment",
															"src": "1605:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1649:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1649:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1618:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1618:30:5"
																},
																"nativeSrc": "1618:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1618:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1605:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1605:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1535:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1575:5:5",
														"nodeType": "YulTypedName",
														"src": "1575:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1585:9:5",
														"nodeType": "YulTypedName",
														"src": "1585:9:5",
														"type": ""
													}
												],
												"src": "1535:126:5"
											},
											{
												"body": {
													"nativeSrc": "1752:66:5",
													"nodeType": "YulBlock",
													"src": "1752:66:5",
													"statements": [
														{
															"nativeSrc": "1762:50:5",
															"nodeType": "YulAssignment",
															"src": "1762:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1806:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1806:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1775:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "1775:30:5"
																},
																"nativeSrc": "1775:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1775:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1762:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1762:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20Upgradeable_$526_to_t_address",
												"nativeSrc": "1667:151:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1732:5:5",
														"nodeType": "YulTypedName",
														"src": "1732:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1742:9:5",
														"nodeType": "YulTypedName",
														"src": "1742:9:5",
														"type": ""
													}
												],
												"src": "1667:151:5"
											},
											{
												"body": {
													"nativeSrc": "1914:91:5",
													"nodeType": "YulBlock",
													"src": "1914:91:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1931:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1931:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1992:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1992:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20Upgradeable_$526_to_t_address",
																			"nativeSrc": "1936:55:5",
																			"nodeType": "YulIdentifier",
																			"src": "1936:55:5"
																		},
																		"nativeSrc": "1936:62:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:62:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1924:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:5"
																},
																"nativeSrc": "1924:75:5",
																"nodeType": "YulFunctionCall",
																"src": "1924:75:5"
															},
															"nativeSrc": "1924:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "1924:75:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20Upgradeable_$526_to_t_address_fromStack",
												"nativeSrc": "1824:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1902:5:5",
														"nodeType": "YulTypedName",
														"src": "1902:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1909:3:5",
														"nodeType": "YulTypedName",
														"src": "1909:3:5",
														"type": ""
													}
												],
												"src": "1824:181:5"
											},
											{
												"body": {
													"nativeSrc": "2134:149:5",
													"nodeType": "YulBlock",
													"src": "2134:149:5",
													"statements": [
														{
															"nativeSrc": "2144:26:5",
															"nodeType": "YulAssignment",
															"src": "2144:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2156:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2156:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2167:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2167:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2152:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2152:3:5"
																},
																"nativeSrc": "2152:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2152:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2144:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2144:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2249:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2249:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2262:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2262:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2273:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2273:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2258:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2258:3:5"
																		},
																		"nativeSrc": "2258:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2258:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20Upgradeable_$526_to_t_address_fromStack",
																	"nativeSrc": "2180:68:5",
																	"nodeType": "YulIdentifier",
																	"src": "2180:68:5"
																},
																"nativeSrc": "2180:96:5",
																"nodeType": "YulFunctionCall",
																"src": "2180:96:5"
															},
															"nativeSrc": "2180:96:5",
															"nodeType": "YulExpressionStatement",
															"src": "2180:96:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$526__to_t_address__fromStack_reversed",
												"nativeSrc": "2011:272:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2106:9:5",
														"nodeType": "YulTypedName",
														"src": "2106:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2118:6:5",
														"nodeType": "YulTypedName",
														"src": "2118:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2129:4:5",
														"nodeType": "YulTypedName",
														"src": "2129:4:5",
														"type": ""
													}
												],
												"src": "2011:272:5"
											},
											{
												"body": {
													"nativeSrc": "2354:53:5",
													"nodeType": "YulBlock",
													"src": "2354:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2371:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2371:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2394:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2394:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2376:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2376:17:5"
																		},
																		"nativeSrc": "2376:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2364:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2364:6:5"
																},
																"nativeSrc": "2364:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2364:37:5"
															},
															"nativeSrc": "2364:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2364:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2289:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2342:5:5",
														"nodeType": "YulTypedName",
														"src": "2342:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2349:3:5",
														"nodeType": "YulTypedName",
														"src": "2349:3:5",
														"type": ""
													}
												],
												"src": "2289:118:5"
											},
											{
												"body": {
													"nativeSrc": "2511:124:5",
													"nodeType": "YulBlock",
													"src": "2511:124:5",
													"statements": [
														{
															"nativeSrc": "2521:26:5",
															"nodeType": "YulAssignment",
															"src": "2521:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2533:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2533:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2544:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2544:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2529:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2529:3:5"
																},
																"nativeSrc": "2529:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2529:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2521:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2521:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2601:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2601:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2614:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2614:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2625:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2625:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2610:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2610:3:5"
																		},
																		"nativeSrc": "2610:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2610:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2557:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2557:43:5"
																},
																"nativeSrc": "2557:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2557:71:5"
															},
															"nativeSrc": "2557:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2557:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2413:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2483:9:5",
														"nodeType": "YulTypedName",
														"src": "2483:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2495:6:5",
														"nodeType": "YulTypedName",
														"src": "2495:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2506:4:5",
														"nodeType": "YulTypedName",
														"src": "2506:4:5",
														"type": ""
													}
												],
												"src": "2413:222:5"
											},
											{
												"body": {
													"nativeSrc": "2686:32:5",
													"nodeType": "YulBlock",
													"src": "2686:32:5",
													"statements": [
														{
															"nativeSrc": "2696:16:5",
															"nodeType": "YulAssignment",
															"src": "2696:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "2707:5:5",
																"nodeType": "YulIdentifier",
																"src": "2707:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2696:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2696:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2641:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2668:5:5",
														"nodeType": "YulTypedName",
														"src": "2668:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2678:7:5",
														"nodeType": "YulTypedName",
														"src": "2678:7:5",
														"type": ""
													}
												],
												"src": "2641:77:5"
											},
											{
												"body": {
													"nativeSrc": "2767:79:5",
													"nodeType": "YulBlock",
													"src": "2767:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2824:16:5",
																"nodeType": "YulBlock",
																"src": "2824:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2833:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2833:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2836:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2826:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2826:6:5"
																			},
																			"nativeSrc": "2826:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2826:12:5"
																		},
																		"nativeSrc": "2826:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2826:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2790:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2790:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2815:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2815:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2797:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2797:17:5"
																				},
																				"nativeSrc": "2797:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2797:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2787:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2787:2:5"
																		},
																		"nativeSrc": "2787:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2787:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2780:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:5"
																},
																"nativeSrc": "2780:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2780:43:5"
															},
															"nativeSrc": "2777:63:5",
															"nodeType": "YulIf",
															"src": "2777:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2724:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2760:5:5",
														"nodeType": "YulTypedName",
														"src": "2760:5:5",
														"type": ""
													}
												],
												"src": "2724:122:5"
											},
											{
												"body": {
													"nativeSrc": "2904:87:5",
													"nodeType": "YulBlock",
													"src": "2904:87:5",
													"statements": [
														{
															"nativeSrc": "2914:29:5",
															"nodeType": "YulAssignment",
															"src": "2914:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2936:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2936:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2923:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2923:12:5"
																},
																"nativeSrc": "2923:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2923:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2914:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2914:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2979:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2979:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2952:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2952:26:5"
																},
																"nativeSrc": "2952:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2952:33:5"
															},
															"nativeSrc": "2952:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2952:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2852:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2882:6:5",
														"nodeType": "YulTypedName",
														"src": "2882:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2890:3:5",
														"nodeType": "YulTypedName",
														"src": "2890:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2898:5:5",
														"nodeType": "YulTypedName",
														"src": "2898:5:5",
														"type": ""
													}
												],
												"src": "2852:139:5"
											},
											{
												"body": {
													"nativeSrc": "3080:391:5",
													"nodeType": "YulBlock",
													"src": "3080:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3126:83:5",
																"nodeType": "YulBlock",
																"src": "3126:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3128:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3128:77:5"
																			},
																			"nativeSrc": "3128:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3128:79:5"
																		},
																		"nativeSrc": "3128:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3128:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3101:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3110:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3110:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3097:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:5"
																		},
																		"nativeSrc": "3097:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3097:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3093:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:5"
																},
																"nativeSrc": "3093:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3093:32:5"
															},
															"nativeSrc": "3090:119:5",
															"nodeType": "YulIf",
															"src": "3090:119:5"
														},
														{
															"nativeSrc": "3219:117:5",
															"nodeType": "YulBlock",
															"src": "3219:117:5",
															"statements": [
																{
																	"nativeSrc": "3234:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3234:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3248:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3248:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3238:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3238:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3263:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3263:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3298:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3298:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3309:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3309:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3294:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3294:3:5"
																				},
																				"nativeSrc": "3294:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3294:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3318:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3318:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3273:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3273:20:5"
																		},
																		"nativeSrc": "3273:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3273:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3263:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3263:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3346:118:5",
															"nodeType": "YulBlock",
															"src": "3346:118:5",
															"statements": [
																{
																	"nativeSrc": "3361:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3361:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3375:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3365:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3365:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3391:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3391:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3426:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3426:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3437:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3437:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3422:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3422:3:5"
																				},
																				"nativeSrc": "3422:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3422:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3446:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3446:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3401:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3401:20:5"
																		},
																		"nativeSrc": "3401:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3401:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3391:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3391:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2997:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3042:9:5",
														"nodeType": "YulTypedName",
														"src": "3042:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3053:7:5",
														"nodeType": "YulTypedName",
														"src": "3053:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3065:6:5",
														"nodeType": "YulTypedName",
														"src": "3065:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3073:6:5",
														"nodeType": "YulTypedName",
														"src": "3073:6:5",
														"type": ""
													}
												],
												"src": "2997:474:5"
											},
											{
												"body": {
													"nativeSrc": "3543:263:5",
													"nodeType": "YulBlock",
													"src": "3543:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3589:83:5",
																"nodeType": "YulBlock",
																"src": "3589:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3591:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3591:77:5"
																			},
																			"nativeSrc": "3591:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3591:79:5"
																		},
																		"nativeSrc": "3591:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3591:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3564:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3564:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3573:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3573:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3560:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:5"
																		},
																		"nativeSrc": "3560:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3560:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3585:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3585:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3556:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3556:3:5"
																},
																"nativeSrc": "3556:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3556:32:5"
															},
															"nativeSrc": "3553:119:5",
															"nodeType": "YulIf",
															"src": "3553:119:5"
														},
														{
															"nativeSrc": "3682:117:5",
															"nodeType": "YulBlock",
															"src": "3682:117:5",
															"statements": [
																{
																	"nativeSrc": "3697:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3697:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3711:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3711:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3701:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3701:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3726:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3726:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3761:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3761:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3772:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3772:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3757:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3757:3:5"
																				},
																				"nativeSrc": "3757:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3757:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3781:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3781:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3736:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3736:20:5"
																		},
																		"nativeSrc": "3736:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3736:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3726:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3726:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3477:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3513:9:5",
														"nodeType": "YulTypedName",
														"src": "3513:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3524:7:5",
														"nodeType": "YulTypedName",
														"src": "3524:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3536:6:5",
														"nodeType": "YulTypedName",
														"src": "3536:6:5",
														"type": ""
													}
												],
												"src": "3477:329:5"
											},
											{
												"body": {
													"nativeSrc": "3865:32:5",
													"nodeType": "YulBlock",
													"src": "3865:32:5",
													"statements": [
														{
															"nativeSrc": "3875:16:5",
															"nodeType": "YulAssignment",
															"src": "3875:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "3886:5:5",
																"nodeType": "YulIdentifier",
																"src": "3886:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3875:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3875:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "3812:85:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3847:5:5",
														"nodeType": "YulTypedName",
														"src": "3847:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3857:7:5",
														"nodeType": "YulTypedName",
														"src": "3857:7:5",
														"type": ""
													}
												],
												"src": "3812:85:5"
											},
											{
												"body": {
													"nativeSrc": "3947:57:5",
													"nodeType": "YulBlock",
													"src": "3947:57:5",
													"statements": [
														{
															"nativeSrc": "3957:41:5",
															"nodeType": "YulAssignment",
															"src": "3957:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3972:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3972:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3979:18:5",
																		"nodeType": "YulLiteral",
																		"src": "3979:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3968:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3968:3:5"
																},
																"nativeSrc": "3968:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3968:30:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3957:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3957:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "3903:101:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3929:5:5",
														"nodeType": "YulTypedName",
														"src": "3929:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3939:7:5",
														"nodeType": "YulTypedName",
														"src": "3939:7:5",
														"type": ""
													}
												],
												"src": "3903:101:5"
											},
											{
												"body": {
													"nativeSrc": "4077:89:5",
													"nodeType": "YulBlock",
													"src": "4077:89:5",
													"statements": [
														{
															"nativeSrc": "4087:73:5",
															"nodeType": "YulAssignment",
															"src": "4087:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4152:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4152:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "4126:25:5",
																					"nodeType": "YulIdentifier",
																					"src": "4126:25:5"
																				},
																				"nativeSrc": "4126:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4126:32:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4117:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "4117:8:5"
																		},
																		"nativeSrc": "4117:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4117:42:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "4100:16:5",
																	"nodeType": "YulIdentifier",
																	"src": "4100:16:5"
																},
																"nativeSrc": "4100:60:5",
																"nodeType": "YulFunctionCall",
																"src": "4100:60:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4087:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "4087:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "4010:156:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4057:5:5",
														"nodeType": "YulTypedName",
														"src": "4057:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4067:9:5",
														"nodeType": "YulTypedName",
														"src": "4067:9:5",
														"type": ""
													}
												],
												"src": "4010:156:5"
											},
											{
												"body": {
													"nativeSrc": "4244:73:5",
													"nodeType": "YulBlock",
													"src": "4244:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4261:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4261:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4304:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4304:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "4266:37:5",
																			"nodeType": "YulIdentifier",
																			"src": "4266:37:5"
																		},
																		"nativeSrc": "4266:44:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4266:44:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4254:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:5"
																},
																"nativeSrc": "4254:57:5",
																"nodeType": "YulFunctionCall",
																"src": "4254:57:5"
															},
															"nativeSrc": "4254:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "4254:57:5"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "4172:145:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4232:5:5",
														"nodeType": "YulTypedName",
														"src": "4232:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4239:3:5",
														"nodeType": "YulTypedName",
														"src": "4239:3:5",
														"type": ""
													}
												],
												"src": "4172:145:5"
											},
											{
												"body": {
													"nativeSrc": "4428:131:5",
													"nodeType": "YulBlock",
													"src": "4428:131:5",
													"statements": [
														{
															"nativeSrc": "4438:26:5",
															"nodeType": "YulAssignment",
															"src": "4438:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4450:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4450:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4461:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4446:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:5"
																},
																"nativeSrc": "4446:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4446:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4438:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4438:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4525:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4525:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4538:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4538:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4549:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4549:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4534:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4534:3:5"
																		},
																		"nativeSrc": "4534:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4534:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "4474:50:5",
																	"nodeType": "YulIdentifier",
																	"src": "4474:50:5"
																},
																"nativeSrc": "4474:78:5",
																"nodeType": "YulFunctionCall",
																"src": "4474:78:5"
															},
															"nativeSrc": "4474:78:5",
															"nodeType": "YulExpressionStatement",
															"src": "4474:78:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "4323:236:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4400:9:5",
														"nodeType": "YulTypedName",
														"src": "4400:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4412:6:5",
														"nodeType": "YulTypedName",
														"src": "4412:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4423:4:5",
														"nodeType": "YulTypedName",
														"src": "4423:4:5",
														"type": ""
													}
												],
												"src": "4323:236:5"
											},
											{
												"body": {
													"nativeSrc": "4691:206:5",
													"nodeType": "YulBlock",
													"src": "4691:206:5",
													"statements": [
														{
															"nativeSrc": "4701:26:5",
															"nodeType": "YulAssignment",
															"src": "4701:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4713:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4713:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4724:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4724:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4709:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4709:3:5"
																},
																"nativeSrc": "4709:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4709:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4701:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4701:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4781:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4781:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4794:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4805:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4805:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4790:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:5"
																		},
																		"nativeSrc": "4790:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4790:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4737:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4737:43:5"
																},
																"nativeSrc": "4737:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4737:71:5"
															},
															"nativeSrc": "4737:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4737:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4862:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4862:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4875:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4886:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4871:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:5"
																		},
																		"nativeSrc": "4871:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4818:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4818:43:5"
																},
																"nativeSrc": "4818:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4818:72:5"
															},
															"nativeSrc": "4818:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4818:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4565:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4655:9:5",
														"nodeType": "YulTypedName",
														"src": "4655:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4667:6:5",
														"nodeType": "YulTypedName",
														"src": "4667:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4675:6:5",
														"nodeType": "YulTypedName",
														"src": "4675:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4686:4:5",
														"nodeType": "YulTypedName",
														"src": "4686:4:5",
														"type": ""
													}
												],
												"src": "4565:332:5"
											},
											{
												"body": {
													"nativeSrc": "4966:80:5",
													"nodeType": "YulBlock",
													"src": "4966:80:5",
													"statements": [
														{
															"nativeSrc": "4976:22:5",
															"nodeType": "YulAssignment",
															"src": "4976:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4991:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4991:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4985:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4985:5:5"
																},
																"nativeSrc": "4985:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4985:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4976:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4976:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5034:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5034:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5007:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "5007:26:5"
																},
																"nativeSrc": "5007:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5007:33:5"
															},
															"nativeSrc": "5007:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5007:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4903:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4944:6:5",
														"nodeType": "YulTypedName",
														"src": "4944:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4952:3:5",
														"nodeType": "YulTypedName",
														"src": "4952:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4960:5:5",
														"nodeType": "YulTypedName",
														"src": "4960:5:5",
														"type": ""
													}
												],
												"src": "4903:143:5"
											},
											{
												"body": {
													"nativeSrc": "5129:274:5",
													"nodeType": "YulBlock",
													"src": "5129:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5175:83:5",
																"nodeType": "YulBlock",
																"src": "5175:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5177:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5177:77:5"
																			},
																			"nativeSrc": "5177:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5177:79:5"
																		},
																		"nativeSrc": "5177:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5177:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5150:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5150:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5159:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5159:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5146:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5146:3:5"
																		},
																		"nativeSrc": "5146:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5146:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5171:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5171:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5142:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5142:3:5"
																},
																"nativeSrc": "5142:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5142:32:5"
															},
															"nativeSrc": "5139:119:5",
															"nodeType": "YulIf",
															"src": "5139:119:5"
														},
														{
															"nativeSrc": "5268:128:5",
															"nodeType": "YulBlock",
															"src": "5268:128:5",
															"statements": [
																{
																	"nativeSrc": "5283:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5283:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5297:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5297:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5287:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5287:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5312:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5312:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5358:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5358:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5369:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5369:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5354:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5354:3:5"
																				},
																				"nativeSrc": "5354:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5354:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5378:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5378:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5322:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5322:31:5"
																		},
																		"nativeSrc": "5322:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5322:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5312:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5312:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5052:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5099:9:5",
														"nodeType": "YulTypedName",
														"src": "5099:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5110:7:5",
														"nodeType": "YulTypedName",
														"src": "5110:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5122:6:5",
														"nodeType": "YulTypedName",
														"src": "5122:6:5",
														"type": ""
													}
												],
												"src": "5052:351:5"
											},
											{
												"body": {
													"nativeSrc": "5505:73:5",
													"nodeType": "YulBlock",
													"src": "5505:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5522:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5522:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5527:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5527:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5515:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5515:6:5"
																},
																"nativeSrc": "5515:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5515:19:5"
															},
															"nativeSrc": "5515:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5515:19:5"
														},
														{
															"nativeSrc": "5543:29:5",
															"nodeType": "YulAssignment",
															"src": "5543:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5562:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5562:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5567:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5567:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5558:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5558:3:5"
																},
																"nativeSrc": "5558:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5558:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5543:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5543:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5409:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5477:3:5",
														"nodeType": "YulTypedName",
														"src": "5477:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5482:6:5",
														"nodeType": "YulTypedName",
														"src": "5482:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5493:11:5",
														"nodeType": "YulTypedName",
														"src": "5493:11:5",
														"type": ""
													}
												],
												"src": "5409:169:5"
											},
											{
												"body": {
													"nativeSrc": "5690:66:5",
													"nodeType": "YulBlock",
													"src": "5690:66:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5712:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5712:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5720:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5720:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5708:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5708:3:5"
																		},
																		"nativeSrc": "5708:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5708:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "5724:24:5",
																		"nodeType": "YulLiteral",
																		"src": "5724:24:5",
																		"type": "",
																		"value": "Insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5701:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5701:6:5"
																},
																"nativeSrc": "5701:48:5",
																"nodeType": "YulFunctionCall",
																"src": "5701:48:5"
															},
															"nativeSrc": "5701:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "5701:48:5"
														}
													]
												},
												"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
												"nativeSrc": "5584:172:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5682:6:5",
														"nodeType": "YulTypedName",
														"src": "5682:6:5",
														"type": ""
													}
												],
												"src": "5584:172:5"
											},
											{
												"body": {
													"nativeSrc": "5908:220:5",
													"nodeType": "YulBlock",
													"src": "5908:220:5",
													"statements": [
														{
															"nativeSrc": "5918:74:5",
															"nodeType": "YulAssignment",
															"src": "5918:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5984:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5984:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5989:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5925:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5925:58:5"
																},
																"nativeSrc": "5925:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5925:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5918:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5918:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6090:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6090:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																	"nativeSrc": "6001:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6001:88:5"
																},
																"nativeSrc": "6001:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6001:93:5"
															},
															"nativeSrc": "6001:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6001:93:5"
														},
														{
															"nativeSrc": "6103:19:5",
															"nodeType": "YulAssignment",
															"src": "6103:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6114:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6114:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6119:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6119:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6110:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6110:3:5"
																},
																"nativeSrc": "6110:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6110:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6103:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6103:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5762:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5896:3:5",
														"nodeType": "YulTypedName",
														"src": "5896:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5904:3:5",
														"nodeType": "YulTypedName",
														"src": "5904:3:5",
														"type": ""
													}
												],
												"src": "5762:366:5"
											},
											{
												"body": {
													"nativeSrc": "6305:248:5",
													"nodeType": "YulBlock",
													"src": "6305:248:5",
													"statements": [
														{
															"nativeSrc": "6315:26:5",
															"nodeType": "YulAssignment",
															"src": "6315:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6327:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6327:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6338:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6338:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6323:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6323:3:5"
																},
																"nativeSrc": "6323:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6323:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6315:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6315:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6362:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6362:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6373:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6373:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6358:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6358:3:5"
																		},
																		"nativeSrc": "6358:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6358:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6381:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6381:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6387:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6387:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6377:3:5"
																		},
																		"nativeSrc": "6377:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6377:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6351:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6351:6:5"
																},
																"nativeSrc": "6351:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6351:47:5"
															},
															"nativeSrc": "6351:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6351:47:5"
														},
														{
															"nativeSrc": "6407:139:5",
															"nodeType": "YulAssignment",
															"src": "6407:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6541:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6541:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6415:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6415:124:5"
																},
																"nativeSrc": "6415:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6415:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6407:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6407:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6134:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6285:9:5",
														"nodeType": "YulTypedName",
														"src": "6285:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6300:4:5",
														"nodeType": "YulTypedName",
														"src": "6300:4:5",
														"type": ""
													}
												],
												"src": "6134:419:5"
											},
											{
												"body": {
													"nativeSrc": "6624:53:5",
													"nodeType": "YulBlock",
													"src": "6624:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6641:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6641:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6664:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6664:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6646:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "6646:17:5"
																		},
																		"nativeSrc": "6646:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6646:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6634:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6634:6:5"
																},
																"nativeSrc": "6634:37:5",
																"nodeType": "YulFunctionCall",
																"src": "6634:37:5"
															},
															"nativeSrc": "6634:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "6634:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6559:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6612:5:5",
														"nodeType": "YulTypedName",
														"src": "6612:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6619:3:5",
														"nodeType": "YulTypedName",
														"src": "6619:3:5",
														"type": ""
													}
												],
												"src": "6559:118:5"
											},
											{
												"body": {
													"nativeSrc": "6837:288:5",
													"nodeType": "YulBlock",
													"src": "6837:288:5",
													"statements": [
														{
															"nativeSrc": "6847:26:5",
															"nodeType": "YulAssignment",
															"src": "6847:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6859:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6859:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6870:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6855:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6855:3:5"
																},
																"nativeSrc": "6855:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6855:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6847:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6847:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6927:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6927:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6940:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6940:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6951:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6951:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6936:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:5"
																		},
																		"nativeSrc": "6936:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6883:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6883:43:5"
																},
																"nativeSrc": "6883:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6883:71:5"
															},
															"nativeSrc": "6883:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6883:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7008:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7021:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7032:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7032:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7017:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:5"
																		},
																		"nativeSrc": "7017:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7017:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6964:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6964:43:5"
																},
																"nativeSrc": "6964:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6964:72:5"
															},
															"nativeSrc": "6964:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6964:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7090:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7090:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7103:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7103:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7114:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7114:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7099:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7099:3:5"
																		},
																		"nativeSrc": "7099:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7099:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7046:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7046:43:5"
																},
																"nativeSrc": "7046:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7046:72:5"
															},
															"nativeSrc": "7046:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7046:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6683:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6793:9:5",
														"nodeType": "YulTypedName",
														"src": "6793:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6805:6:5",
														"nodeType": "YulTypedName",
														"src": "6805:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6813:6:5",
														"nodeType": "YulTypedName",
														"src": "6813:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6821:6:5",
														"nodeType": "YulTypedName",
														"src": "6821:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6832:4:5",
														"nodeType": "YulTypedName",
														"src": "6832:4:5",
														"type": ""
													}
												],
												"src": "6683:442:5"
											},
											{
												"body": {
													"nativeSrc": "7173:48:5",
													"nodeType": "YulBlock",
													"src": "7173:48:5",
													"statements": [
														{
															"nativeSrc": "7183:32:5",
															"nodeType": "YulAssignment",
															"src": "7183:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7208:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7208:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7201:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7201:6:5"
																		},
																		"nativeSrc": "7201:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7201:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7194:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7194:6:5"
																},
																"nativeSrc": "7194:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7194:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7183:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7183:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7131:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7155:5:5",
														"nodeType": "YulTypedName",
														"src": "7155:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7165:7:5",
														"nodeType": "YulTypedName",
														"src": "7165:7:5",
														"type": ""
													}
												],
												"src": "7131:90:5"
											},
											{
												"body": {
													"nativeSrc": "7267:76:5",
													"nodeType": "YulBlock",
													"src": "7267:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7321:16:5",
																"nodeType": "YulBlock",
																"src": "7321:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7330:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7330:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7333:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7333:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7323:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7323:6:5"
																			},
																			"nativeSrc": "7323:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7323:12:5"
																		},
																		"nativeSrc": "7323:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7323:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7290:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7290:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7312:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7312:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7297:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "7297:14:5"
																				},
																				"nativeSrc": "7297:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7297:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7287:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "7287:2:5"
																		},
																		"nativeSrc": "7287:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7287:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7280:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7280:6:5"
																},
																"nativeSrc": "7280:40:5",
																"nodeType": "YulFunctionCall",
																"src": "7280:40:5"
															},
															"nativeSrc": "7277:60:5",
															"nodeType": "YulIf",
															"src": "7277:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7227:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7260:5:5",
														"nodeType": "YulTypedName",
														"src": "7260:5:5",
														"type": ""
													}
												],
												"src": "7227:116:5"
											},
											{
												"body": {
													"nativeSrc": "7409:77:5",
													"nodeType": "YulBlock",
													"src": "7409:77:5",
													"statements": [
														{
															"nativeSrc": "7419:22:5",
															"nodeType": "YulAssignment",
															"src": "7419:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7434:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7434:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7428:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7428:5:5"
																},
																"nativeSrc": "7428:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7428:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7419:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7419:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7474:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7474:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7450:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "7450:23:5"
																},
																"nativeSrc": "7450:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7450:30:5"
															},
															"nativeSrc": "7450:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7450:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7349:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7387:6:5",
														"nodeType": "YulTypedName",
														"src": "7387:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7395:3:5",
														"nodeType": "YulTypedName",
														"src": "7395:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7403:5:5",
														"nodeType": "YulTypedName",
														"src": "7403:5:5",
														"type": ""
													}
												],
												"src": "7349:137:5"
											},
											{
												"body": {
													"nativeSrc": "7566:271:5",
													"nodeType": "YulBlock",
													"src": "7566:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7612:83:5",
																"nodeType": "YulBlock",
																"src": "7612:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7614:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7614:77:5"
																			},
																			"nativeSrc": "7614:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7614:79:5"
																		},
																		"nativeSrc": "7614:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7614:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7587:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7587:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7596:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7596:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7583:3:5"
																		},
																		"nativeSrc": "7583:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7583:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7608:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7608:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7579:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7579:3:5"
																},
																"nativeSrc": "7579:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7579:32:5"
															},
															"nativeSrc": "7576:119:5",
															"nodeType": "YulIf",
															"src": "7576:119:5"
														},
														{
															"nativeSrc": "7705:125:5",
															"nodeType": "YulBlock",
															"src": "7705:125:5",
															"statements": [
																{
																	"nativeSrc": "7720:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7720:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7734:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7734:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7724:6:5",
																			"nodeType": "YulTypedName",
																			"src": "7724:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7749:71:5",
																	"nodeType": "YulAssignment",
																	"src": "7749:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7792:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7792:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7803:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7803:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7788:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7788:3:5"
																				},
																				"nativeSrc": "7788:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7788:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7812:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7812:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7759:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "7759:28:5"
																		},
																		"nativeSrc": "7759:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7759:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7749:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7749:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7492:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7536:9:5",
														"nodeType": "YulTypedName",
														"src": "7536:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7547:7:5",
														"nodeType": "YulTypedName",
														"src": "7547:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7559:6:5",
														"nodeType": "YulTypedName",
														"src": "7559:6:5",
														"type": ""
													}
												],
												"src": "7492:345:5"
											},
											{
												"body": {
													"nativeSrc": "7949:74:5",
													"nodeType": "YulBlock",
													"src": "7949:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7971:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7971:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7979:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7979:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7967:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7967:3:5"
																		},
																		"nativeSrc": "7967:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7967:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f696e7320696e2074686520706f6f6c",
																		"kind": "string",
																		"nativeSrc": "7983:32:5",
																		"nodeType": "YulLiteral",
																		"src": "7983:32:5",
																		"type": "",
																		"value": "Insufficient coins in the pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7960:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7960:6:5"
																},
																"nativeSrc": "7960:56:5",
																"nodeType": "YulFunctionCall",
																"src": "7960:56:5"
															},
															"nativeSrc": "7960:56:5",
															"nodeType": "YulExpressionStatement",
															"src": "7960:56:5"
														}
													]
												},
												"name": "store_literal_in_memory_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532",
												"nativeSrc": "7843:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7941:6:5",
														"nodeType": "YulTypedName",
														"src": "7941:6:5",
														"type": ""
													}
												],
												"src": "7843:180:5"
											},
											{
												"body": {
													"nativeSrc": "8175:220:5",
													"nodeType": "YulBlock",
													"src": "8175:220:5",
													"statements": [
														{
															"nativeSrc": "8185:74:5",
															"nodeType": "YulAssignment",
															"src": "8185:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8251:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8251:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8256:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8256:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8192:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8192:58:5"
																},
																"nativeSrc": "8192:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8192:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8185:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8185:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8357:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8357:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532",
																	"nativeSrc": "8268:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8268:88:5"
																},
																"nativeSrc": "8268:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8268:93:5"
															},
															"nativeSrc": "8268:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8268:93:5"
														},
														{
															"nativeSrc": "8370:19:5",
															"nodeType": "YulAssignment",
															"src": "8370:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8381:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8381:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8386:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8386:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8377:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8377:3:5"
																},
																"nativeSrc": "8377:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8377:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8370:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8370:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8029:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8163:3:5",
														"nodeType": "YulTypedName",
														"src": "8163:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8171:3:5",
														"nodeType": "YulTypedName",
														"src": "8171:3:5",
														"type": ""
													}
												],
												"src": "8029:366:5"
											},
											{
												"body": {
													"nativeSrc": "8572:248:5",
													"nodeType": "YulBlock",
													"src": "8572:248:5",
													"statements": [
														{
															"nativeSrc": "8582:26:5",
															"nodeType": "YulAssignment",
															"src": "8582:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8594:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8594:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8605:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8605:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8590:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:5"
																},
																"nativeSrc": "8590:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8590:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8582:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8582:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8629:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8629:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8640:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8640:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8625:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8625:3:5"
																		},
																		"nativeSrc": "8625:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8625:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8648:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8648:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8654:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8654:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8644:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8644:3:5"
																		},
																		"nativeSrc": "8644:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8644:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8618:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8618:6:5"
																},
																"nativeSrc": "8618:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8618:47:5"
															},
															"nativeSrc": "8618:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8618:47:5"
														},
														{
															"nativeSrc": "8674:139:5",
															"nodeType": "YulAssignment",
															"src": "8674:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8808:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8808:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8682:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8682:124:5"
																},
																"nativeSrc": "8682:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8682:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8674:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8674:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8401:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8552:9:5",
														"nodeType": "YulTypedName",
														"src": "8552:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8567:4:5",
														"nodeType": "YulTypedName",
														"src": "8567:4:5",
														"type": ""
													}
												],
												"src": "8401:419:5"
											},
											{
												"body": {
													"nativeSrc": "8952:206:5",
													"nodeType": "YulBlock",
													"src": "8952:206:5",
													"statements": [
														{
															"nativeSrc": "8962:26:5",
															"nodeType": "YulAssignment",
															"src": "8962:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8974:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8974:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8985:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8985:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8970:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8970:3:5"
																},
																"nativeSrc": "8970:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8970:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8962:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8962:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9042:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9042:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9055:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9055:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9066:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9066:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9051:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9051:3:5"
																		},
																		"nativeSrc": "9051:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9051:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8998:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8998:43:5"
																},
																"nativeSrc": "8998:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8998:71:5"
															},
															"nativeSrc": "8998:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8998:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9123:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9123:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9136:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9136:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9147:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9147:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9132:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:5"
																		},
																		"nativeSrc": "9132:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9132:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9079:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9079:43:5"
																},
																"nativeSrc": "9079:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9079:72:5"
															},
															"nativeSrc": "9079:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9079:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8826:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8916:9:5",
														"nodeType": "YulTypedName",
														"src": "8916:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8928:6:5",
														"nodeType": "YulTypedName",
														"src": "8928:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8936:6:5",
														"nodeType": "YulTypedName",
														"src": "8936:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8947:4:5",
														"nodeType": "YulTypedName",
														"src": "8947:4:5",
														"type": ""
													}
												],
												"src": "8826:332:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20Upgradeable_$526_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20Upgradeable_$526_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20Upgradeable_$526_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$526__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20Upgradeable_$526_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient coins in the pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c80638da5cb5b116100595780638da5cb5b146100c35780639e5383e1146100e1578063ca634519146100fd578063f2fde38b146101195761007b565b8063485cc9551461007f5780635eaf40141461009b578063715018a6146100b9575b5f80fd5b610099600480360381019061009491906109ea565b610135565b005b6100a36102f6565b6040516100b09190610a83565b60405180910390f35b6100c1610319565b005b6100cb61032c565b6040516100d89190610aab565b60405180910390f35b6100fb60048036038101906100f69190610af7565b610361565b005b61011760048036038101906101129190610af7565b6104e5565b005b610133600480360381019061012e9190610b35565b610665565b005b5f61013e6106e9565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156101865750825b90505f60018367ffffffffffffffff161480156101b957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156101c7575080155b156101fe576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561024b576001855f0160086101000a81548160ff0219169083151502179055505b61025486610710565b865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156102ed575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516102e49190610bac565b60405180910390a15b50505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610321610724565b61032a5f6107ab565b565b5f8061033661087c565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610369610724565b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff1660e01b81526004016103c4929190610bc5565b602060405180830381865afa1580156103df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104039190610c00565b1015610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610c85565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b81526004016104a093929190610cb2565b6020604051808303815f875af11580156104bc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e09190610d1c565b505050565b6104ed610724565b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105469190610aab565b602060405180830381865afa158015610561573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105859190610c00565b10156105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90610d91565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610620929190610daf565b6020604051808303815f875af115801561063c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106609190610d1c565b505050565b61066d610724565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106dd575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106d49190610aab565b60405180910390fd5b6106e6816107ab565b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6107186108a3565b610721816108e3565b50565b61072c610967565b73ffffffffffffffffffffffffffffffffffffffff1661074a61032c565b73ffffffffffffffffffffffffffffffffffffffff16146107a95761076d610967565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107a09190610aab565b60405180910390fd5b565b5f6107b461087c565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6108ab61096e565b6108e1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6108eb6108a3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361095b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109529190610aab565b60405180910390fd5b610964816107ab565b50565b5f33905090565b5f6109776106e9565b5f0160089054906101000a900460ff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109b982610990565b9050919050565b6109c9816109af565b81146109d3575f80fd5b50565b5f813590506109e4816109c0565b92915050565b5f8060408385031215610a00576109ff61098c565b5b5f610a0d858286016109d6565b9250506020610a1e858286016109d6565b9150509250929050565b5f819050919050565b5f610a4b610a46610a4184610990565b610a28565b610990565b9050919050565b5f610a5c82610a31565b9050919050565b5f610a6d82610a52565b9050919050565b610a7d81610a63565b82525050565b5f602082019050610a965f830184610a74565b92915050565b610aa5816109af565b82525050565b5f602082019050610abe5f830184610a9c565b92915050565b5f819050919050565b610ad681610ac4565b8114610ae0575f80fd5b50565b5f81359050610af181610acd565b92915050565b5f8060408385031215610b0d57610b0c61098c565b5b5f610b1a858286016109d6565b9250506020610b2b85828601610ae3565b9150509250929050565b5f60208284031215610b4a57610b4961098c565b5b5f610b57848285016109d6565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f610b96610b91610b8c84610b60565b610a28565b610b69565b9050919050565b610ba681610b7c565b82525050565b5f602082019050610bbf5f830184610b9d565b92915050565b5f604082019050610bd85f830185610a9c565b610be56020830184610a9c565b9392505050565b5f81519050610bfa81610acd565b92915050565b5f60208284031215610c1557610c1461098c565b5b5f610c2284828501610bec565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f610c6f601683610c2b565b9150610c7a82610c3b565b602082019050919050565b5f6020820190508181035f830152610c9c81610c63565b9050919050565b610cac81610ac4565b82525050565b5f606082019050610cc55f830186610a9c565b610cd26020830185610a9c565b610cdf6040830184610ca3565b949350505050565b5f8115159050919050565b610cfb81610ce7565b8114610d05575f80fd5b50565b5f81519050610d1681610cf2565b92915050565b5f60208284031215610d3157610d3061098c565b5b5f610d3e84828501610d08565b91505092915050565b7f496e73756666696369656e7420636f696e7320696e2074686520706f6f6c00005f82015250565b5f610d7b601e83610c2b565b9150610d8682610d47565b602082019050919050565b5f6020820190508181035f830152610da881610d6f565b9050919050565b5f604082019050610dc25f830185610a9c565b610dcf6020830184610ca3565b939250505056fea2646970667358221220d05e3b2fbc199ae6a37dc84342e8e1b3d84432bbeb3ee1baf306cb654094fa6264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x9E5383E1 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xCA634519 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x119 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5EAF4014 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x319 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x13E PUSH2 0x6E9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x186 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1B9 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1C7 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x24B JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x254 DUP7 PUSH2 0x710 JUMP JUMPDEST DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x724 JUMP JUMPDEST PUSH2 0x32A PUSH0 PUSH2 0x7AB JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x336 PUSH2 0x87C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x369 PUSH2 0x724 JUMP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP3 SWAP2 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST LT ISZERO PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x724 JUMP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST LT ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x620 SWAP3 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x66D PUSH2 0x724 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6DD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E6 DUP2 PUSH2 0x7AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x718 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x721 DUP2 PUSH2 0x8E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x72C PUSH2 0x967 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x74A PUSH2 0x32C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A9 JUMPI PUSH2 0x76D PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x7B4 PUSH2 0x87C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0x96E JUMP JUMPDEST PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x8EB PUSH2 0x8A3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x952 SWAP2 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x964 DUP2 PUSH2 0x7AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x977 PUSH2 0x6E9 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B9 DUP3 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C9 DUP2 PUSH2 0x9AF JUMP JUMPDEST DUP2 EQ PUSH2 0x9D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9E4 DUP2 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA00 JUMPI PUSH2 0x9FF PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA0D DUP6 DUP3 DUP7 ADD PUSH2 0x9D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA1E DUP6 DUP3 DUP7 ADD PUSH2 0x9D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA4B PUSH2 0xA46 PUSH2 0xA41 DUP5 PUSH2 0x990 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA5C DUP3 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6D DUP3 PUSH2 0xA52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7D DUP2 PUSH2 0xA63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA96 PUSH0 DUP4 ADD DUP5 PUSH2 0xA74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA5 DUP2 PUSH2 0x9AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xABE PUSH0 DUP4 ADD DUP5 PUSH2 0xA9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD6 DUP2 PUSH2 0xAC4 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF1 DUP2 PUSH2 0xACD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB0D JUMPI PUSH2 0xB0C PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB1A DUP6 DUP3 DUP7 ADD PUSH2 0x9D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB2B DUP6 DUP3 DUP7 ADD PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4A JUMPI PUSH2 0xB49 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB57 DUP5 DUP3 DUP6 ADD PUSH2 0x9D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB96 PUSH2 0xB91 PUSH2 0xB8C DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA6 DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBBF PUSH0 DUP4 ADD DUP5 PUSH2 0xB9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBD8 PUSH0 DUP4 ADD DUP6 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xBE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA9C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBFA DUP2 PUSH2 0xACD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC22 DUP5 DUP3 DUP6 ADD PUSH2 0xBEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC6F PUSH1 0x16 DUP4 PUSH2 0xC2B JUMP JUMPDEST SWAP2 POP PUSH2 0xC7A DUP3 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC9C DUP2 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAC DUP2 PUSH2 0xAC4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCC5 PUSH0 DUP4 ADD DUP7 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xCD2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xCDF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCA3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFB DUP2 PUSH2 0xCE7 JUMP JUMPDEST DUP2 EQ PUSH2 0xD05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD16 DUP2 PUSH2 0xCF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD3E DUP5 DUP3 DUP6 ADD PUSH2 0xD08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F696E7320696E2074686520706F6F6C0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD7B PUSH1 0x1E DUP4 PUSH2 0xC2B JUMP JUMPDEST SWAP2 POP PUSH2 0xD86 DUP3 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDA8 DUP2 PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDC2 PUSH0 DUP4 ADD DUP6 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xDCF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 MCOPY EXTCODESIZE 0x2F 0xBC NOT SWAP11 0xE6 LOG3 PUSH30 0xC84342E8E1B3D84432BBEB3EE1BAF306CB654094FA6264736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "215:746:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;261:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;2441:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:238:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;487:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;302:179:4;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;394:22:4::1;409:6;394:14;:22::i;:::-;456:17;426:9;::::0;:48:::1;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;302:179:4;;:::o;261:34::-;;;;;;;;;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;721:238:4:-;2334:13:0;:11;:13::i;:::-;856:6:4::1;810:9;::::0;::::1;;;;;;;;:19;;;830:6;846:4;810:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;802:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;899:9;::::0;::::1;;;;;;;;:22;;;922:6;938:4;945:6;899:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;721:238:::0;;:::o;487:228::-;2334:13:0;:11;:13::i;:::-;620:6:4::1;582:9;::::0;::::1;;;;;;;;:19;;;610:4;582:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;574:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;671:9;::::0;::::1;;;;;;;;:18;;;690:9;701:6;671:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;487:228:::0;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2658:162::-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:60::-;1349:3;1370:5;1363:12;;1321:60;;;:::o;1387:142::-;1437:9;1470:53;1488:34;1497:24;1515:5;1497:24;:::i;:::-;1488:34;:::i;:::-;1470:53;:::i;:::-;1457:66;;1387:142;;;:::o;1535:126::-;1585:9;1618:37;1649:5;1618:37;:::i;:::-;1605:50;;1535:126;;;:::o;1667:151::-;1742:9;1775:37;1806:5;1775:37;:::i;:::-;1762:50;;1667:151;;;:::o;1824:181::-;1936:62;1992:5;1936:62;:::i;:::-;1931:3;1924:75;1824:181;;:::o;2011:272::-;2129:4;2167:2;2156:9;2152:18;2144:26;;2180:96;2273:1;2262:9;2258:17;2249:6;2180:96;:::i;:::-;2011:272;;;;:::o;2289:118::-;2376:24;2394:5;2376:24;:::i;:::-;2371:3;2364:37;2289:118;;:::o;2413:222::-;2506:4;2544:2;2533:9;2529:18;2521:26;;2557:71;2625:1;2614:9;2610:17;2601:6;2557:71;:::i;:::-;2413:222;;;;:::o;2641:77::-;2678:7;2707:5;2696:16;;2641:77;;;:::o;2724:122::-;2797:24;2815:5;2797:24;:::i;:::-;2790:5;2787:35;2777:63;;2836:1;2833;2826:12;2777:63;2724:122;:::o;2852:139::-;2898:5;2936:6;2923:20;2914:29;;2952:33;2979:5;2952:33;:::i;:::-;2852:139;;;;:::o;2997:474::-;3065:6;3073;3122:2;3110:9;3101:7;3097:23;3093:32;3090:119;;;3128:79;;:::i;:::-;3090:119;3248:1;3273:53;3318:7;3309:6;3298:9;3294:22;3273:53;:::i;:::-;3263:63;;3219:117;3375:2;3401:53;3446:7;3437:6;3426:9;3422:22;3401:53;:::i;:::-;3391:63;;3346:118;2997:474;;;;;:::o;3477:329::-;3536:6;3585:2;3573:9;3564:7;3560:23;3556:32;3553:119;;;3591:79;;:::i;:::-;3553:119;3711:1;3736:53;3781:7;3772:6;3761:9;3757:22;3736:53;:::i;:::-;3726:63;;3682:117;3477:329;;;;:::o;3812:85::-;3857:7;3886:5;3875:16;;3812:85;;;:::o;3903:101::-;3939:7;3979:18;3972:5;3968:30;3957:41;;3903:101;;;:::o;4010:156::-;4067:9;4100:60;4117:42;4126:32;4152:5;4126:32;:::i;:::-;4117:42;:::i;:::-;4100:60;:::i;:::-;4087:73;;4010:156;;;:::o;4172:145::-;4266:44;4304:5;4266:44;:::i;:::-;4261:3;4254:57;4172:145;;:::o;4323:236::-;4423:4;4461:2;4450:9;4446:18;4438:26;;4474:78;4549:1;4538:9;4534:17;4525:6;4474:78;:::i;:::-;4323:236;;;;:::o;4565:332::-;4686:4;4724:2;4713:9;4709:18;4701:26;;4737:71;4805:1;4794:9;4790:17;4781:6;4737:71;:::i;:::-;4818:72;4886:2;4875:9;4871:18;4862:6;4818:72;:::i;:::-;4565:332;;;;;:::o;4903:143::-;4960:5;4991:6;4985:13;4976:22;;5007:33;5034:5;5007:33;:::i;:::-;4903:143;;;;:::o;5052:351::-;5122:6;5171:2;5159:9;5150:7;5146:23;5142:32;5139:119;;;5177:79;;:::i;:::-;5139:119;5297:1;5322:64;5378:7;5369:6;5358:9;5354:22;5322:64;:::i;:::-;5312:74;;5268:128;5052:351;;;;:::o;5409:169::-;5493:11;5527:6;5522:3;5515:19;5567:4;5562:3;5558:14;5543:29;;5409:169;;;;:::o;5584:172::-;5724:24;5720:1;5712:6;5708:14;5701:48;5584:172;:::o;5762:366::-;5904:3;5925:67;5989:2;5984:3;5925:67;:::i;:::-;5918:74;;6001:93;6090:3;6001:93;:::i;:::-;6119:2;6114:3;6110:12;6103:19;;5762:366;;;:::o;6134:419::-;6300:4;6338:2;6327:9;6323:18;6315:26;;6387:9;6381:4;6377:20;6373:1;6362:9;6358:17;6351:47;6415:131;6541:4;6415:131;:::i;:::-;6407:139;;6134:419;;;:::o;6559:118::-;6646:24;6664:5;6646:24;:::i;:::-;6641:3;6634:37;6559:118;;:::o;6683:442::-;6832:4;6870:2;6859:9;6855:18;6847:26;;6883:71;6951:1;6940:9;6936:17;6927:6;6883:71;:::i;:::-;6964:72;7032:2;7021:9;7017:18;7008:6;6964:72;:::i;:::-;7046;7114:2;7103:9;7099:18;7090:6;7046:72;:::i;:::-;6683:442;;;;;;:::o;7131:90::-;7165:7;7208:5;7201:13;7194:21;7183:32;;7131:90;;;:::o;7227:116::-;7297:21;7312:5;7297:21;:::i;:::-;7290:5;7287:32;7277:60;;7333:1;7330;7323:12;7277:60;7227:116;:::o;7349:137::-;7403:5;7434:6;7428:13;7419:22;;7450:30;7474:5;7450:30;:::i;:::-;7349:137;;;;:::o;7492:345::-;7559:6;7608:2;7596:9;7587:7;7583:23;7579:32;7576:119;;;7614:79;;:::i;:::-;7576:119;7734:1;7759:61;7812:7;7803:6;7792:9;7788:22;7759:61;:::i;:::-;7749:71;;7705:125;7492:345;;;;:::o;7843:180::-;7983:32;7979:1;7971:6;7967:14;7960:56;7843:180;:::o;8029:366::-;8171:3;8192:67;8256:2;8251:3;8192:67;:::i;:::-;8185:74;;8268:93;8357:3;8268:93;:::i;:::-;8386:2;8381:3;8377:12;8370:19;;8029:366;;;:::o;8401:419::-;8567:4;8605:2;8594:9;8590:18;8582:26;;8654:9;8648:4;8644:20;8640:1;8629:9;8625:17;8618:47;8682:131;8808:4;8682:131;:::i;:::-;8674:139;;8401:419;;;:::o;8826:332::-;8947:4;8985:2;8974:9;8970:18;8962:26;;8998:71;9066:1;9055:9;9051:17;9042:6;8998:71;:::i;:::-;9079:72;9147:2;9136:9;9132:18;9123:6;9079:72;:::i;:::-;8826:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "719200",
								"executionCost": "751",
								"totalCost": "719951"
							},
							"external": {
								"collectCoins(address,uint256)": "infinite",
								"distributeCoins(address,uint256)": "infinite",
								"initialize(address,address)": "infinite",
								"loginCoin()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 961,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 215,
									"end": 961,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 961,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d05e3b2fbc199ae6a37dc84342e8e1b3d84432bbeb3ee1baf306cb654094fa6264736f6c63430008190033",
									".code": [
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "9E5383E1"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "CA634519"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "485CC955"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "5EAF4014"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 215,
											"end": 961,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 302,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 302,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 302,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 302,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 302,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 302,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 302,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 261,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 261,
											"end": 295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 721,
											"end": 959,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 721,
											"end": 959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 721,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 721,
											"end": 959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 721,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 721,
											"end": 959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 721,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 721,
											"end": 959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 487,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 487,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 487,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 487,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 487,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 487,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 487,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 302,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 302,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 394,
											"end": 416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 409,
											"end": 415,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 394,
											"end": 408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 394,
											"end": 416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 394,
											"end": 416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 456,
											"end": 473,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 426,
											"end": 435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 426,
											"end": 474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 302,
											"end": 481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 261,
											"end": 295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 261,
											"end": 295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 959,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 721,
											"end": 959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 856,
											"end": 862,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 810,
											"end": 829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 829,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 810,
											"end": 829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 830,
											"end": 836,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 846,
											"end": 850,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 810,
											"end": 852,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 810,
											"end": 852,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 810,
											"end": 852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 810,
											"end": 862,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 810,
											"end": 862,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 802,
											"end": 889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 802,
											"end": 889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 899,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 899,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 922,
											"end": 928,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 938,
											"end": 942,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 945,
											"end": 951,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 899,
											"end": 952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 952,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 899,
											"end": 952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 899,
											"end": 952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 721,
											"end": 959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 487,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 626,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 591,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 582,
											"end": 601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 582,
											"end": 601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 610,
											"end": 614,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 582,
											"end": 616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 582,
											"end": 616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 582,
											"end": 616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 582,
											"end": 626,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 582,
											"end": 626,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 574,
											"end": 661,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 574,
											"end": 661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 671,
											"end": 689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 671,
											"end": 689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 690,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 701,
											"end": 707,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 671,
											"end": 708,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 671,
											"end": 708,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 671,
											"end": 708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 941,
											"end": 964,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 972,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1117,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1245,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1308,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1381,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1321,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1387,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1497,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1515,
											"end": 1520,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1497,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1521,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1497,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1488,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1488,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1470,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1523,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1470,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1661,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1535,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1618,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1655,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1618,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1818,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1667,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1742,
											"end": 1751,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1806,
											"end": 1811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1775,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1775,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1775,
											"end": 1812,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1775,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1818,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2005,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1824,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1992,
											"end": 1997,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1936,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1998,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1936,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1999,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 2005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2011,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2169,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2165,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2255,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2180,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2276,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2180,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2283,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2283,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2376,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2400,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2376,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2635,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2413,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2546,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2625,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2623,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2557,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2628,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2557,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2635,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2718,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2641,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2846,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2724,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2815,
											"end": 2820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2797,
											"end": 2821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2821,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2797,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2822,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2777,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2777,
											"end": 2840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2838,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2777,
											"end": 2840,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2777,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2991,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2852,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2943,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2979,
											"end": 2984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2952,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2985,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2952,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2991,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2991,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3471,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2997,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3125,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3128,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3090,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3273,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3273,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3326,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3446,
											"end": 3453,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3401,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3471,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3471,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3471,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3587,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3583,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3588,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3591,
											"end": 3670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3591,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3553,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3781,
											"end": 3788,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3770,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3736,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3736,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3897,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3812,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 4004,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3903,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3972,
											"end": 3977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 3998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 3998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 3998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 4004,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 4004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 4004,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 4004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4166,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4010,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4117,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4126,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4152,
											"end": 4157,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4126,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4158,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4126,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4117,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4117,
											"end": 4159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4117,
											"end": 4159,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4117,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4100,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4166,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4010,
											"end": 4166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4317,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4172,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4304,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4266,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4310,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4266,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4261,
											"end": 4264,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4559,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4323,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4474,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4549,
											"end": 4550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4547,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4534,
											"end": 4551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4474,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4474,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4474,
											"end": 4552,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4474,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4897,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4565,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4713,
											"end": 4722,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4701,
											"end": 4727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4701,
											"end": 4727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4781,
											"end": 4787,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4737,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4808,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4737,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4875,
											"end": 4884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4868,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4818,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4890,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4818,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4897,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4897,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4565,
											"end": 4897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 5046,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4903,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4997,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4998,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 4998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5007,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5040,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5007,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 5046,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 5046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 5046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 5046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 5046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5403,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5052,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5157,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5169,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5174,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5258,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5139,
											"end": 5258,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5177,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5177,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5256,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5177,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5258,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5139,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5378,
											"end": 5385,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5375,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5322,
											"end": 5386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5386,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5322,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5268,
											"end": 5396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5403,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5578,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5409,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5525,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5515,
											"end": 5534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5571,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5578,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5578,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5756,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5584,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5724,
											"end": 5748,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E7420616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 5722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5749,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6128,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5762,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5989,
											"end": 5991,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 5984,
											"end": 5987,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5925,
											"end": 5992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5992,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5925,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 6090,
											"end": 6093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 6001,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6094,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 6001,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6117,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 6128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6553,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6134,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6381,
											"end": 6385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6377,
											"end": 6397,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6398,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 6541,
											"end": 6545,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6415,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6546,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 6415,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6407,
											"end": 6546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6407,
											"end": 6546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6553,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6677,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6559,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6646,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6670,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6646,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6559,
											"end": 6677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 7125,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6683,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6832,
											"end": 6836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6855,
											"end": 6873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6847,
											"end": 6873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6847,
											"end": 6873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 6883,
											"end": 6954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 7032,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 6964,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6964,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 7114,
											"end": 7116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7103,
											"end": 7112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7090,
											"end": 7096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 7046,
											"end": 7118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 7046,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 7125,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 7125,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 7125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 7125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 7125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 7125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 7125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7131,
											"end": 7221,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7131,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7165,
											"end": 7172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7215,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7131,
											"end": 7221,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7131,
											"end": 7221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7131,
											"end": 7221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7131,
											"end": 7221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7343,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7227,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7297,
											"end": 7318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7318,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 7297,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7290,
											"end": 7295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7277,
											"end": 7337,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7337,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7277,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7349,
											"end": 7486,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7349,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7474,
											"end": 7479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7450,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7349,
											"end": 7486,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7349,
											"end": 7486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7349,
											"end": 7486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7349,
											"end": 7486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7349,
											"end": 7486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7837,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7492,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7559,
											"end": 7565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7610,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7596,
											"end": 7605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7583,
											"end": 7606,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7611,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7695,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7576,
											"end": 7695,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7614,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7614,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7614,
											"end": 7693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7614,
											"end": 7693,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7614,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7695,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7576,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7734,
											"end": 7735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7803,
											"end": 7809,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7792,
											"end": 7801,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7759,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7759,
											"end": 7820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7759,
											"end": 7820,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7759,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7749,
											"end": 7820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7749,
											"end": 7820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7705,
											"end": 7830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7837,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 8023,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 7843,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E7420636F696E7320696E2074686520706F6F6C0000"
										},
										{
											"begin": 7979,
											"end": 7980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7971,
											"end": 7977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7967,
											"end": 7981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7960,
											"end": 8016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 8023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 8023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8395,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8029,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8256,
											"end": 8258,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 8251,
											"end": 8254,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8192,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8192,
											"end": 8259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8192,
											"end": 8259,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8192,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8259,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8268,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 8357,
											"end": 8360,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8268,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8268,
											"end": 8361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8268,
											"end": 8361,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 8268,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8386,
											"end": 8388,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8381,
											"end": 8384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 8389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 8389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8029,
											"end": 8395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8820,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8401,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8567,
											"end": 8571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8605,
											"end": 8607,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8594,
											"end": 8603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8590,
											"end": 8608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8582,
											"end": 8608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8582,
											"end": 8608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 8663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8648,
											"end": 8652,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8644,
											"end": 8664,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8640,
											"end": 8641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8629,
											"end": 8638,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8625,
											"end": 8642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8618,
											"end": 8665,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8682,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8808,
											"end": 8812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8682,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8682,
											"end": 8813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8682,
											"end": 8813,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8682,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8674,
											"end": 8813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8674,
											"end": 8813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 9158,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 8826,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 8951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 8987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8974,
											"end": 8983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 8988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 8988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 9066,
											"end": 9067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9068,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9048,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 8998,
											"end": 9069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9069,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8998,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9147,
											"end": 9149,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9136,
											"end": 9145,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9132,
											"end": 9150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9123,
											"end": 9129,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 9079,
											"end": 9151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9079,
											"end": 9151,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9079,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 9158,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 9158,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 9158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 9158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 9158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 9158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"contracts/CoinPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"collectCoins(address,uint256)": "9e5383e1",
							"distributeCoins(address,uint256)": "ca634519",
							"initialize(address,address)": "485cc955",
							"loginCoin()": "5eaf4014",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectCoins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeCoins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_loginCoinAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loginCoin\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinPool.sol\":\"CoinPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"contracts/CoinPool.sol\":{\"keccak256\":\"0xfbde2297c910ca22cfb4b822789954f1b81617589eada51b056105e55cbd131d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20d226895515f9aa1eb2b8a4a5d7e626828e1dc559c43d03be751014291f3e73\",\"dweb:/ipfs/QmRZep2Yq3phdCRVYuAd2HqQsTwbtyGGFXMjG6NSGxrutr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 581,
								"contract": "contracts/CoinPool.sol:CoinPool",
								"label": "loginCoin",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20Upgradeable)526"
							}
						],
						"types": {
							"t_contract(IERC20Upgradeable)526": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							572
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 573,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 572,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 572,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								572,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							526
						]
					},
					"id": 527,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 451,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 526,
							"linearizedBaseContracts": [
								526
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 460,
									"name": "Transfer",
									"nameLocation": "405:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "414:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "436:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "456:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:2"
									},
									"src": "399:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 469,
									"name": "Approval",
									"nameLocation": "636:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "645:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "668:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "693:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:2"
									},
									"src": "630:78:2"
								},
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:2"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "831:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:2"
									},
									"scope": 526,
									"src": "785:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "942:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "982:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:2"
									},
									"scope": 526,
									"src": "923:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1234:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:2"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 526,
									"src": "1204:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 526,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2302:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2319:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2353:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:2"
									},
									"scope": 526,
									"src": "2285:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2693:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2705:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:2"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:2"
									},
									"scope": 526,
									"src": "2657:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 527,
							"src": "202:2545:2",
							"usedErrors": [],
							"usedEvents": [
								460,
								469
							]
						}
					],
					"src": "106:2642:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							572
						],
						"Initializable": [
							448
						]
					},
					"id": 573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 528,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 573,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 529,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 532,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 533,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 531,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 572,
							"linearizedBaseContracts": [
								572,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 536,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 535,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 572,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 572,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 550,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 549,
												"id": 552,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 572,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 558,
												"id": 561,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 572,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 567,
												"id": 569,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 572,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 573,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"contracts/CoinPool.sol": {
				"ast": {
					"absolutePath": "contracts/CoinPool.sol",
					"exportedSymbols": {
						"CoinPool": [
							667
						],
						"ContextUpgradeable": [
							572
						],
						"IERC20Upgradeable": [
							526
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 668,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 575,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 668,
							"sourceUnit": 527,
							"src": "58:79:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 668,
							"sourceUnit": 195,
							"src": "138:75:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 577,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"236:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "236:18:4"
									},
									"id": 578,
									"nodeType": "InheritanceSpecifier",
									"src": "236:18:4"
								}
							],
							"canonicalName": "CoinPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 667,
							"linearizedBaseContracts": [
								667,
								194,
								572,
								448
							],
							"name": "CoinPool",
							"nameLocation": "224:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5eaf4014",
									"id": 581,
									"mutability": "mutable",
									"name": "loginCoin",
									"nameLocation": "286:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "261:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 580,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 579,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"261:17:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 526,
											"src": "261:17:4"
										},
										"referencedDeclaration": 526,
										"src": "261:17:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "384:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "409:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 590,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "394:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "394:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "394:22:4"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 594,
														"name": "loginCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "426:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 596,
																"name": "_loginCoinAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "456:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 595,
															"name": "IERC20Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "438:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$526_$",
																"typeString": "type(contract IERC20Upgradeable)"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "438:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "426:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "426:48:4"
											}
										]
									},
									"functionSelector": "485cc955",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 588,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 587,
												"name": "initializer",
												"nameLocations": [
													"372:11:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "372:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "372:11:4"
										}
									],
									"name": "initialize",
									"nameLocation": "311:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "_loginCoinAddress",
												"nameLocation": "330:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "322:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "357:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "349:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:43:4"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:0:4"
									},
									"scope": 667,
									"src": "302:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "564:151:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 615,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "610:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CoinPool_$667",
																					"typeString": "contract CoinPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CoinPool_$667",
																					"typeString": "contract CoinPool"
																				}
																			],
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "602:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 613,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "602:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "602:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 611,
																		"name": "loginCoin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "582:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "592:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 483,
																	"src": "582:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "582:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 618,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "620:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "582:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f696e7320696e2074686520706f6f6c",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "628:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532",
																"typeString": "literal_string \"Insufficient coins in the pool\""
															},
															"value": "Insufficient coins in the pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e38a5b68eef1f05c9b4672bcc4f804c729cd78b0c8d4a20d0d50701c3353532",
																"typeString": "literal_string \"Insufficient coins in the pool\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "574:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "574:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "574:87:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 626,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "690:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "701:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 623,
															"name": "loginCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "671:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "681:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 493,
														"src": "671:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "671:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "671:37:4"
											}
										]
									},
									"functionSelector": "ca634519",
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 607,
												"name": "onlyOwner",
												"nameLocations": [
													"554:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "554:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "554:9:4"
										}
									],
									"name": "distributeCoins",
									"nameLocation": "496:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "520:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "512:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "539:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "531:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:35:4"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:0:4"
									},
									"scope": 667,
									"src": "487:228:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "792:167:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 643,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "830:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 646,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "846:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CoinPool_$667",
																					"typeString": "contract CoinPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CoinPool_$667",
																					"typeString": "contract CoinPool"
																				}
																			],
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "838:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 644,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "838:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "838:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 641,
																		"name": "loginCoin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "810:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "820:9:4",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 503,
																	"src": "810:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "810:42:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 649,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "856:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "810:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "864:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															},
															"value": "Insufficient allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															}
														],
														"id": 640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "802:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "802:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "802:87:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "922:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 660,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "938:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CoinPool_$667",
																		"typeString": "contract CoinPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CoinPool_$667",
																		"typeString": "contract CoinPool"
																	}
																],
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "930:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 658,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "930:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "930:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "945:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 654,
															"name": "loginCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "899:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$526",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "909:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 525,
														"src": "899:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "899:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "899:53:4"
											}
										]
									},
									"functionSelector": "9e5383e1",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 638,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 637,
												"name": "onlyOwner",
												"nameLocations": [
													"782:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "782:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "782:9:4"
										}
									],
									"name": "collectCoins",
									"nameLocation": "730:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "751:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "743:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "767:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "759:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:32:4"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "792:0:4"
									},
									"scope": 667,
									"src": "721:238:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 668,
							"src": "215:746:4",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "32:930:4"
				},
				"id": 4
			}
		}
	}
}